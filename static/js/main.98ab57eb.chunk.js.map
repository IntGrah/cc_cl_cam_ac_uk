{"version":3,"sources":["LanguageDef.ts","SamplePrograms.ts","util.ts","Editor.tsx","Progress.tsx","slangWrapper.ts","Interpreter2.tsx","Interpreter3.tsx","InterpreterJargon.tsx","App.tsx","index.tsx"],"names":["languageDef","keywords","typeKeywords","operators","symbols","escapes","tokenizer","root","cases","include","token","bracket","next","comment","string","whitespace","samplePrograms","fib","fun","gcd","useKeypress","keys","handler","eventListenerRef","useRef","useEffect","current","event","includes","key","eventListener","window","addEventListener","removeEventListener","Editor","props","setDecorations","useState","decorations","editorRef","monacoRef","onMouseMoveRef","onMouseMove","onMouseLeaveRef","onMouseLeave","keyDownRef","onKeyDown","old_dec","deltaDecorations","onMount","e","m","browserEvent","keyHandler","index","setIndex","size","Progress","values","n","length","className","onClick","selectedIndex","appearance","onSelect","jsonParsedStream","s","steps","JSON","parse","reverse","i2compile","slang","interp2Code","i3compile","interp3Code","jargonCompile","jargonCode","i2Stream","i3Stream","code","stepStream","jargonStream","stringOfCode","c","map","join","trimClosures","ss","_","split","slice","Interpreter2","source","onClose","setStream","step","setStep","codeStack","envStack","memory","showNestedInstructions","setShowNestedInstructions","codeStackS","envStackS","memoryS","showMem","some","value","language","options","readOnly","theme","lineNumbers","lineNumber","toString","Interpreter3","currentInst","cleanCode","i","filter","clean","revealRange","Range","range","isWholeLine","linesDecorationsClassName","minimap","enabled","Cytoscape","use","klay","nodeStyle","nodeTp","style","shape","color","InterpreterJargon","codeString","stack","cp","fp","heap","heap_graph","env","currentFrame","showMemory","trim","show","val","showHeap","pointers","setPointers","nodes","edges","elements","v","data","tp","onMouseNodeOver","useDebouncedCallback","target","_private","isCI","pointer","parseInt","id","onMouseNodeOff","width","setPosition","column","height","cy","on","_evt","layout","name","direction","borderSpacing","spacing","run","fit","App","volatileSource","setSource","useDebounce","result","setResult","i2code","setI2code","i2codeString","i3code","setI3code","i3codeString","setJargonCode","jargonCodeString","showI2","setShowI2","showI3","setShowI3","showJargon","setShowJargon","highlight","line","volatileSourceHighlight","setSourceHighlight","sourceHighlight","decorationsTargetHandler","l","reduce","linesToHighlight","codeLine","monaco","useMonaco","editor","setTheme","languages","register","setMonarchTokensProvider","position","undefined","defaultValue","defaultLanguage","onChange","disabled","interp0","tabSize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98ab57eb.chunk.js","sourcesContent":["const languageDef = {\n  keywords: [\n    \"true\", \"false\", \"ref\", \"inl\", \"inr\",\n    \"fst\", \"snd\", \"case\", \"of\", \"if\", \"then\",\n    \"else\", \"let\", \"fun\", \"in\", \"begin\", \"end\",\n    \"while\", \"do\", \"()\"\n  ],\n\n  typeKeywords: [\n    'int', 'bool', 'unit', 'banter'\n  ],\n\n  operators: [\n    \",\", \":\", \";\", \"+\",\n    \"-\", \"*\", \"/\", \"~\",\n    \"=\", \":=\", \"<\", \"&&\",\n    \"||\", \"|\", \"->\", \"?\",\n    \"!\", \"()\"\n  ],\n\n  // we include these common regular expressions\n  symbols:  /[=><!~?:&|+\\-*/^%]+/,\n\n  // C# style strings\n  escapes: /\\\\/,\n\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n      // identifiers and keywords\n      [/[a-z_$][\\w$]*/, { cases: { '@typeKeywords': 'keyword',\n                                   '@keywords': 'keyword',\n                                   '@default': 'identifier' } }],\n      [/[A-Z][\\w$]*/, 'type.identifier' ],  // to show class names nicely\n\n      // whitespace\n      { include: '@whitespace' },\n\n      // delimiters and operators\n      [/[{}()[\\]]/, '@brackets'],\n      [/[<>](?!@symbols)/, '@brackets'],\n      [/@symbols/, { cases: { '@operators': 'operator',\n                              '@default'  : '' } } ],\n\n      // numbers\n      [/\\d*\\.\\d+([eE][-+]?\\d+)?/, 'number.float'],\n      [/0[xX][0-9a-fA-F]+/, 'number.hex'],\n      [/\\d+/, 'number'],\n\n      // strings\n      [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid' ],  // non-teminated string\n      [/\"/,  { token: 'string.quote', bracket: '@open', next: '@string' } ],\n\n      // characters\n      [/'[^\\\\']'/, 'string'],\n      [/(')(@escapes)(')/, ['string','string.escape','string']],\n      [/'/, 'string.invalid']\n    ],\n\n    comment: [\n      [/[^(*]+/, 'comment' ],\n      [/\\(\\*/,    'comment', '@push' ],    // nested comment\n      [\"\\\\*\\\\)\",    'comment', '@pop'  ],\n      [/[(*]/,   'comment' ]\n    ],\n\n    string: [\n      [/[^\\\\\"]+/,  'string'],\n      [/@escapes/, 'string.escape'],\n      [/\\\\./,      'string.escape.invalid'],\n      [/\"/,        { token: 'string.quote', bracket: '@close', next: '@pop' } ]\n    ],\n\n    whitespace: [\n      [/[ \\t\\r\\n]+/, 'white'],\n      [/\\(\\*/,       'comment', '@comment' ],\n    ],\n  },\n};\n\nexport default languageDef;\n","const samplePrograms = {\n  fib: `let fib( m : int) : int =\n    if m = 0\n    then 1\n    else if m = 1\n        then 1\n        else fib (m - 1) + fib (m -2)\n        end\n    end\nin\n    fib(1)\nend`,\n\n  fun: `(* the reason we need closures on the heap ... *) \n\nlet f(y : int) : int -> int =\n  let g(x :int) : int = y + x in g end\nin\n  let add21 : int -> int  = f(21) in\n      let add17 : int -> int  = f(17) in\n         add17(3) + add21(60)\n       end\n  end\nend`,\n\n  gcd: `let gcd(p : int * int) : int =\n    let m : int = fst p in\n       let  n : int = snd p in\n          if m = n\n          then m\n          else if m < n\n               then gcd(m, n - m)\n               else gcd(m - n, n)\n               end\n           end\n       end\n     end\nin\n   let x : int = 10 in\n      let  y : int = 2 in gcd(x, y) end\n    end\nend`\n};\n\nexport default samplePrograms;\n","import { useEffect, useRef } from 'react';\n\ntype Handler = (event: KeyboardEvent) => void;\n\nexport const useKeypress = (keys: string[], handler: Handler) => {\n  const eventListenerRef = useRef<Handler>(() => {});\n\n  useEffect(() => {\n    eventListenerRef.current = (event: KeyboardEvent) => {\n      if (keys.includes(event.key)) {\n        handler?.(event);\n      }\n    };\n  }, [keys, handler]);\n\n  useEffect(() => {\n    const eventListener = (event: KeyboardEvent) => {\n      eventListenerRef.current(event);\n    };\n    window.addEventListener('keydown', eventListener);\n    return () => {\n      window.removeEventListener('keydown', eventListener);\n    };\n  }, []);\n};","import EditorInternal, { EditorProps, Monaco } from \"@monaco-editor/react\";\nimport { useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\n\ninterface IEditorProps extends EditorProps {\n  onKeyDown?: (e: KeyboardEvent) => void;\n  decorations?: (editor: any, monaco: Monaco) => any;\n  onMouseMove?: (e: any) => void;\n  onMouseLeave?: (e: any) => void;\n}\n\nconst Editor = (props: IEditorProps) => {\n  const setDecorations = useState({})[1];\n  const { decorations } = props;\n\n  const editorRef = useRef<any>();\n  const monacoRef = useRef<any>();\n\n  const onMount = (e: any, m: any) => {\n    editorRef.current = e;\n    monacoRef.current = m;\n    if (decorations) {\n      setDecorations((old_dec) =>\n        editorRef.current?.deltaDecorations(\n          old_dec,\n          decorations(editorRef.current, monacoRef.current)\n        )\n      );\n    }\n  };\n\n  const onMouseMoveRef = useRef(props.onMouseMove);\n  onMouseMoveRef.current = props.onMouseMove;\n\n  const onMouseLeaveRef = useRef(props.onMouseLeave);\n  onMouseLeaveRef.current = props.onMouseLeave;\n\n  const keyDownRef = useRef(props.onKeyDown);\n  useEffect(() => {\n    keyDownRef.current = props.onKeyDown;\n  }, [props.onKeyDown]);\n\n  useEffect(() => {\n    if (decorations && editorRef.current && monacoRef.current)\n      setDecorations((old_dec) =>\n        editorRef.current?.deltaDecorations(\n          old_dec,\n          decorations(editorRef.current, monacoRef.current)\n        )\n      );\n  }, [decorations, setDecorations]);\n\n  return (\n    <EditorInternal\n      {...props}\n      onMount={(e, m) => {\n        e.onMouseMove((e: any) => {\n          if (onMouseMoveRef.current) onMouseMoveRef.current(e);\n        });\n        e.onMouseLeave((e: any) => {\n          if (onMouseLeaveRef.current) onMouseLeaveRef.current(e);\n        });\n        if (props.onMount) props.onMount(e, m);\n        onMount(e, m);\n        e.onKeyDown(({ browserEvent }: { browserEvent: KeyboardEvent }) => {\n          if (keyDownRef.current) keyDownRef.current(browserEvent);\n        });\n      }}\n    />\n  );\n};\n\nexport default Editor;\n","import { ProgressIndicator } from \"@atlaskit/progress-indicator\";\nimport \"./Stacks.css\";\nimport { useKeypress } from \"./util\";\n\nexport function keyHandler(\n  index: number,\n  setIndex: (i: number) => void,\n  size: number\n) {\n  const inc = () => setIndex((((index + 1) % size) + size) % size);\n  const dec = () => setIndex((((index - 1) % size) + size) % size);\n\n  return (key: string) => {\n    switch (key) {\n      case \"ArrowRight\":\n        inc();\n        break;\n      case \"ArrowLeft\":\n        dec();\n        break;\n    }\n  };\n}\n\nconst Progress = ({\n  values,\n  index,\n  setIndex,\n}: {\n  values: any[];\n  index: number;\n  setIndex: (n: number) => void;\n}) => {\n  const n = values.length;\n\n  const inc = () => setIndex((((index + 1) % n) + n) % n);\n  const dec = () => setIndex((((index - 1) % n) + n) % n);\n\n  const handler = keyHandler(index, setIndex, n);\n  useKeypress([\"ArrowRight\", \"ArrowLeft\"], (e: KeyboardEvent) =>\n    handler(e.key)\n  );\n\n  return (\n    <div className=\"progress\">\n      <button onClick={dec}>{\"<\"}</button>\n      <ProgressIndicator\n        selectedIndex={index}\n        values={values}\n        appearance={\"inverted\"}\n        onSelect={({ index }) => (setIndex ? setIndex(index) : null)}\n      />\n      <button onClick={inc}>{\">\"}</button>\n    </div>\n  );\n};\n\nexport default Progress;\n","import { Steps as i2Steps } from \"./Interpreter2\";\nimport { StreamWrapper as I3StreamWrapper } from \"./Interpreter3\";\nimport { StreamWrapper as JargonStreamWrapper } from \"./InterpreterJargon\";\n\nexport type code = [number, string][];\n\nexport type Stream<T> = {\n  steps: T;\n  next: () => Stream<T>;\n};\n\nfunction jsonParsedStream<T>(s: Stream<string>): Stream<T> {\n  return {\n    steps: JSON.parse(s.steps).reverse(),\n    next: () => jsonParsedStream(s.next()),\n  };\n}\n\n//@ts-ignore\nexport const interp = (s: string) => slang.interp0(s);\n\nexport const i2compile = (s: string): code =>\n  //@ts-ignore\n  JSON.parse(slang.interp2Code(s));\n\nexport const i3compile = (s: string): code =>\n  //@ts-ignore\n  JSON.parse(slang.interp3Code(s));\n\nexport const jargonCompile = (s: string): code =>\n  //@ts-ignore\n  JSON.parse(slang.jargonCode(s));\n\nexport const i2Stream = (s: string): Stream<i2Steps> => {\n  //@ts-ignore\n  return jsonParsedStream(slang.i2Stream(s));\n};\n\nexport const i3Stream = (s: string): I3StreamWrapper => {\n  //@ts-ignore\n  const { code, stepStream } = slang.i3Stream(s);\n  return { code, stepStream: jsonParsedStream(stepStream) };\n};\n\nexport const jargonStream = (s: string): JargonStreamWrapper => {\n  //@ts-ignore\n  const { code, stepStream } = slang.jargonStream(s);\n  return { code: JSON.parse(code), stepStream: jsonParsedStream(stepStream) };\n};\n\nexport function stringOfCode(c: code) {\n  return c.map(([_, s]) => s).join(\"\\n\");\n}\n\nexport function highlightRowsForLocation(c: code, l: number): number[] {\n  return c.reduce(\n    (linesToHighlight, codeLine, i) =>\n      codeLine[0] === l ? [i, ...linesToHighlight] : linesToHighlight,\n    [] as number[]\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nimport Editor from \"./Editor\";\nimport Progress, { keyHandler } from \"./Progress\";\nimport { i2Stream, Stream } from \"./slangWrapper\";\n\nimport \"./Stacks.css\";\n\ntype CodeStack = string[];\ntype EnvStack = string[];\ntype Memory = string[];\nexport type Steps = [CodeStack, EnvStack, Memory][];\n\nconst trimClosures = (ss: string[]) => {\n  return ss.map((s, _) =>\n    s.length > 40 ? s.split(\"\\n\").join(\" \").slice(0, 40) + \"...\" : s\n  );\n};\n\nconst Interpreter2 = ({\n  source,\n  onClose,\n}: {\n  source: string;\n  onClose?: () => void;\n}) => {\n  const [{ steps, next }, setStream] = useState<Stream<Steps>>(\n    i2Stream(source)\n  );\n  const [step, setStep] = useState(0);\n  const [codeStack, envStack, memory] = steps[step];\n  const [showNestedInstructions, setShowNestedInstructions] = useState(false);\n\n  const codeStackS = (\n    showNestedInstructions ? codeStack : trimClosures(codeStack)\n  ).join(\"\\n\");\n  const envStackS = (\n    showNestedInstructions ? envStack : trimClosures(envStack)\n  ).join(\"\\n\");\n  const memoryS = memory.join(\"\\n\");\n\n  const showMem = steps.some(([_, __, s]) => s.length > 0);\n\n  const handler = keyHandler(step, setStep, steps.length);\n\n  useEffect(() => {\n    setStream(i2Stream(source));\n  }, [source]);\n\n  useEffect(() => {\n    if (step >= steps.length - 3 && steps[steps.length - 1][0].length > 0) {\n      setStream(next());\n    }\n  }, [step, steps, next]);\n\n  return (\n    <div className=\"interpreter\">\n      <div className=\"interpreterTitle\">\n        <h3>\n          Step {step} - {step > 0 ? steps[step - 1][0][0] : \"Start\"}\n        </h3>\n        <button\n          onClick={() => setShowNestedInstructions(!showNestedInstructions)}\n        >\n          {showNestedInstructions ? \"Hide\" : \"Show\"} nested instructions\n        </button>\n        {onClose ? <button onClick={onClose}>X</button> : null}\n      </div>\n      <div className=\"interpreterEditors\">\n        <Editor\n          value={codeStackS}\n          language=\"javascript\"\n          onKeyDown={(e) => handler(e.key)}\n          options={{\n            readOnly: true,\n            theme: \"vs-dark\",\n            lineNumbers: (lineNumber: number) =>\n              codeStackS.split(\"\\n\").length - lineNumber + 1,\n          }}\n        />\n        <Editor\n          value={envStackS}\n          className=\"i2StackEditor\"\n          language=\"javascript\"\n          onKeyDown={(e) => handler(e.key)}\n          options={{\n            readOnly: true,\n            theme: \"vs-dark\",\n            lineNumbers: (lineNumber: number) =>\n              envStackS.split(\"\\n\").length - lineNumber + 1,\n          }}\n        />\n        {showMem ? (\n          <Editor\n            value={memoryS}\n            language=\"javascript\"\n            onKeyDown={(e) => handler(e.key)}\n            options={{\n              readOnly: true,\n              theme: \"vs-dark\",\n              lineNumbers: (lineNumber: number) => (lineNumber - 1).toString(),\n            }}\n          />\n        ) : null}\n      </div>\n      <Progress values={steps} index={step} setIndex={setStep} />\n    </div>\n  );\n};\n\nexport default Interpreter2;\n","import { useEffect, useState } from \"react\";\n\nimport { Monaco } from \"@monaco-editor/react\";\n\nimport Progress, { keyHandler } from \"./Progress\";\nimport Editor from \"./Editor\";\nimport { i3Stream, Stream } from \"./slangWrapper\";\n\nimport \"./Stacks.css\";\n\ntype Code = string;\ntype CodePointer = number;\ntype EnvStack = string[];\ntype Memory = string[];\n\ntype Steps = [CodePointer, EnvStack, Memory][];\nexport type StreamWrapper = {\n  code: Code;\n  stepStream: Stream<Steps>;\n};\n\nconst Interpreter3 = ({\n  source,\n  onClose,\n}: {\n  source: string;\n  onClose?: () => void;\n}) => {\n  const [\n    {\n      code,\n      stepStream: { steps, next },\n    },\n    setStream,\n  ] = useState<StreamWrapper>(i3Stream(source));\n\n  const [step, setStep] = useState(0);\n  const [currentInst, envStack, memory] = steps[step];\n  const cleanCode = clean(code);\n\n  const envStackS = envStack.join(\"\\n\");\n  const memoryS = memory.join(\"\\n\");\n\n  const showMem = steps.some(([_, __, s]) => s.length > 0);\n  const handler = keyHandler(step, setStep, steps.length);\n\n  useEffect(() => {\n    setStream(i3Stream(source));\n  }, [source]);\n\n  useEffect(() => {\n    if (\n      step === steps.length - 1 &&\n      cleanCode.split(\"\\n\")[currentInst] !== \"HALT\"\n    )\n      setStream({\n        code: code,\n        stepStream: next(),\n      });\n  }, [step, code, next, currentInst, cleanCode, steps.length]);\n\n  const decorationsHandler = (e: any, m: Monaco) => {\n    e.revealRange(new m.Range(currentInst, 1, currentInst, 1));\n    return [\n      {\n        range: new m.Range(currentInst + 1, 1, currentInst + 1, 1),\n        options: {\n          isWholeLine: true,\n          linesDecorationsClassName: \"currentLineDec\",\n        },\n      },\n    ];\n  };\n\n  return (\n    <div className=\"interpreter\">\n      <div className=\"interpreterTitle\">\n        <h3>\n          Step {step} - {}\n        </h3>\n        {onClose ? <button onClick={onClose}>X</button> : null}\n      </div>\n      <div className=\"interpreterEditors\">\n        <Editor\n          value={cleanCode}\n          language=\"javascript\"\n          onKeyDown={(e) => handler(e.key)}\n          decorations={decorationsHandler}\n          options={{\n            readOnly: true,\n            lineNumbers: (lineNumber: number) => (lineNumber - 1).toString(),\n            theme: \"vs-dark\",\n          }}\n        />\n        <Editor\n          value={envStackS}\n          language=\"javascript\"\n          onKeyDown={(e) => handler(e.key)}\n          options={{\n            readOnly: true,\n            lineNumbers: (lineNumber: number) =>\n              envStackS.split(\"\\n\").length - lineNumber + 1,\n            minimap: { enabled: false },\n          }}\n        />\n        {showMem ? (\n          <Editor\n            value={memoryS}\n            language=\"javascript\"\n            onKeyDown={(e) => handler(e.key)}\n            options={{\n              readOnly: true,\n              lineNumbers: (lineNumber: number) => (lineNumber - 1).toString(),\n              theme: \"vs-dark\",\n              minimap: { enabled: false },\n            }}\n          />\n        ) : null}\n      </div>\n      <Progress values={steps} index={step} setIndex={setStep} />\n    </div>\n  );\n};\n\nfunction clean(code: string): string {\n  return code\n    .split(\"\\n\")\n    .map((i) => i.split(\" \").slice(1).join(\" \"))\n    .filter((i) => i.length > 0)\n    .join(\"\\n\");\n}\n\nexport default Interpreter3;\n","import { useEffect, useState } from \"react\";\nimport CytoscapeComponent from \"react-cytoscapejs\";\nimport Cytoscape from \"cytoscape\";\n//@ts-ignore\nimport klay from \"cytoscape-klay\";\nimport { useDebouncedCallback } from \"use-debounce\";\n\nimport Progress, { keyHandler } from \"./Progress\";\nimport Editor from \"./Editor\";\nimport \"./Stacks.css\";\nimport { jargonStream, Stream } from \"./slangWrapper\";\n\nCytoscape.use(klay);\n\nexport type Step = {\n  stack: string[];\n  heap: string[];\n  heap_graph: heap_graph;\n  cp: number;\n  fp: number;\n  sp: number;\n  status: string;\n}[];\n\nexport type StreamWrapper = {\n  code: string[];\n  stepStream: Stream<Step>;\n};\n\ntype node_type = \"H_INT\" | \"H_BOOL\" | \"H_CI\" | \"H_HI\" | \"H_HEADER\";\ntype heap_node = {\n  id: string;\n  label: string;\n  tp: [node_type];\n  pointer: number;\n};\n\ntype edge_type = \"BLOCK\" | \"POINTER\";\ntype heap_edge = {\n  source: string;\n  target: string;\n  label: string;\n  tp: [edge_type];\n};\n\ntype heap_graph = [heap_node[], heap_edge[]];\n\ntype pointers = {\n  heap: {\n    show: boolean;\n    val: number;\n  };\n  code: {\n    showHeap: boolean;\n    heap: number;\n  };\n};\n\nconst InterpreterJargon = ({\n  source,\n  onClose,\n}: {\n  source: string;\n  onClose?: () => void;\n}) => {\n  const [\n    {\n      code,\n      stepStream: { steps, next },\n    },\n    setStream,\n  ] = useState(jargonStream(source));\n\n  const codeString = code.join(\"\\n\");\n  const [step, setStep] = useState(0);\n  const { stack, cp, fp, heap, heap_graph } = steps[step];\n\n  const env = stack\n    .slice()\n    .reverse()\n    .map((s) => s.slice(6))\n    .join(\"\\n\");\n\n  const currentInst = cp + 1;\n  const currentFrame = stack.length - fp;\n\n  const memory = heap.join(\"\\n\");\n  const showMemory = steps.some(({ heap }) => heap.length > 0);\n\n  const handler = keyHandler(step, setStep, steps.length);\n\n  useEffect(() => {\n    setStream(jargonStream(source));\n  }, [source]);\n\n  useEffect(() => {\n    if (step === steps.length - 1 && code[cp].trim() !== \"HALT\") {\n      setStream({ code, stepStream: next() });\n    }\n  }, [code, cp, next, step, steps.length]);\n\n  const [pointers, setPointers] = useState<pointers>({\n    heap: {\n      show: false,\n      val: 0,\n    },\n    code: {\n      showHeap: false,\n      heap: 0,\n    },\n  });\n\n  const codeDecorationsHandler = (e: any, m: any) => {\n    e.revealRange(new m.Range(currentInst, 1, currentInst, 1));\n    e.setPosition({\n      column: 0,\n      lineNumber: currentInst,\n    });\n    return [\n      {\n        range: new m.Range(currentInst, 1, currentInst, 1),\n        options: {\n          isWholeLine: true,\n          linesDecorationsClassName: \"currentLineDec\",\n        },\n      },\n      {\n        range: new m.Range(pointers.code.heap, 1, pointers.code.heap, 1),\n        options: {\n          isWholeLine: true,\n          linesDecorationsClassName: pointers.code.showHeap\n            ? \"heapPointerDec\"\n            : \"\",\n        },\n      },\n    ];\n  };\n\n  const envDecorationsHandler = (e: any, m: any) => {\n    return [\n      {\n        range: new m.Range(currentFrame, 1, currentFrame, 1),\n        options: {\n          isWholeLine: true,\n          linesDecorationsClassName: \"framePointerDec\",\n        },\n      },\n    ];\n  };\n\n  const heapDecorationsHandler = (e: any, m: any) => {\n    if (pointers.heap.show) {\n      e.revealRange(new m.Range(pointers.heap.val, 1, pointers.heap.val, 1));\n    }\n    return [\n      {\n        range: new m.Range(pointers.heap.val, 1, pointers.heap.val, 1),\n        options: {\n          isWholeLine: true,\n          linesDecorationsClassName: pointers.heap.show ? \"heapPointerDec\" : \"\",\n        },\n      },\n    ];\n  };\n\n  const [nodes, edges] = heap_graph;\n\n  const elements = [\n    ...nodes.map((v) => ({\n      data: v,\n      style: nodeStyle(v.tp[0]),\n    })),\n    ...edges.map((v) => ({\n      data: v,\n    })),\n  ];\n\n  const onMouseNodeOver = useDebouncedCallback((e: any) => {\n    const data = e.target._private.data;\n    const isCI = data.tp[0] === \"H_CI\";\n    const pointer = {\n      heap: {\n        val: parseInt(data.id) + 1,\n        show: true,\n      },\n      code: {\n        showHeap: isCI,\n        heap: isCI ? data.pointer + 1 : pointers.code.heap,\n      },\n    };\n\n    setPointers(pointer);\n  }, 50);\n\n  const onMouseNodeOff = useDebouncedCallback((e: any) => {\n    setPointers({\n      heap: {\n        val: pointers.heap.val,\n        show: false,\n      },\n      code: {\n        showHeap: false,\n        heap: pointers.code.heap,\n      },\n    });\n  }, 50);\n\n  return (\n    <div className=\"interpreter\">\n      <div className=\"interpreterTitle\">\n        <h3>\n          Step {step} - {}\n        </h3>\n        {onClose ? <button onClick={onClose}>X</button> : null}\n      </div>\n      <div className=\"interpreterEditors\">\n        <Editor\n          value={codeString}\n          width=\"33%\"\n          language=\"javascript\"\n          onKeyDown={(e) => handler(e.key)}\n          decorations={codeDecorationsHandler}\n          options={{\n            readOnly: true,\n            lineNumbers: (lineNumber: number) => (lineNumber - 1).toString(),\n            theme: \"vs-dark\",\n          }}\n        />\n        <Editor\n          value={env}\n          language=\"javascript\"\n          width=\"33%\"\n          onKeyDown={(e) => handler(e.key)}\n          decorations={envDecorationsHandler}\n          options={{\n            readOnly: true,\n            lineNumbers: (lineNumber: number) =>\n              (env.split(\"\\n\").length - lineNumber + 1).toString(),\n            minimap: { enabled: false },\n          }}\n        />\n        <div className=\"jargonMem\">\n          {showMemory ? (\n            <Editor\n              value={memory}\n              height=\"50%\"\n              decorations={heapDecorationsHandler}\n              language=\"javascript\"\n              onKeyDown={(e) => handler(e.key)}\n              options={{\n                readOnly: true,\n                lineNumbers: (lineNumber: number) =>\n                  (lineNumber - 1).toString(),\n                theme: \"vs-dark\",\n                minimap: { enabled: false },\n              }}\n            />\n          ) : null}\n\n          <CytoscapeComponent\n            id=\"heap\"\n            elements={elements}\n            style={{ height: \"50%\" }}\n            cy={(cy) =>\n              cy.on(\"add\", \"node\", (_evt) => {\n                cy.layout({\n                  name: \"klay\",\n                  //@ts-ignore\n                  klay: {\n                    direction: \"DOWN\",\n                    borderSpacing: 80,\n                    spacing: 80,\n                  },\n                }).run();\n                cy.fit();\n                cy.on(\"mouseover\", \"node\", onMouseNodeOver);\n                cy.on(\"mouseout\", \"node\", onMouseNodeOff);\n              })\n            }\n          />\n        </div>\n      </div>\n      <Progress values={steps} index={step} setIndex={setStep} />\n    </div>\n  );\n};\n\nfunction nodeStyle(nodeTp: node_type) {\n  let style;\n  switch (nodeTp) {\n    case \"H_INT\":\n      style = {\n        shape: \"square\",\n        \"background-color\": \"white\",\n      };\n      break;\n    case \"H_BOOL\":\n      style = {\n        shape: \"barrel\",\n        \"background-color\": \"purple\",\n      };\n      break;\n    case \"H_CI\":\n      style = {\n        shape: \"tag\",\n        \"background-color\": \"red\",\n      };\n      break;\n    case \"H_HI\":\n      style = {\n        shape: \"round-tag\",\n        \"background-color\": \"white\",\n      };\n      break;\n    case \"H_HEADER\":\n      style = {\n        \"background-color\": \"black\",\n      };\n  }\n\n  style = {\n    ...style,\n    \"text-margin-y\": \"-10\",\n    \"text-justification\": \"left\",\n    \"text-wrap\": \"wrap\",\n    color: \"green\",\n  };\n  return style;\n}\n\nexport default InterpreterJargon;\n","import { useState, useEffect } from \"react\";\nimport { useDebounce } from \"use-debounce\";\nimport { useMonaco } from \"@monaco-editor/react\";\n\nimport languageDef from \"./LanguageDef\";\nimport samplePrograms from \"./SamplePrograms\";\nimport { useKeypress } from \"./util\";\nimport Interpreter2 from \"./Interpreter2\";\nimport Interpreter3 from \"./Interpreter3\";\nimport InterpreterJargon from \"./InterpreterJargon\";\nimport \"./App.css\";\nimport {\n  code,\n  highlightRowsForLocation,\n  i2compile,\n  i3compile,\n  interp,\n  jargonCompile,\n  stringOfCode,\n} from \"./slangWrapper\";\nimport Editor from \"./Editor\";\n\nconst { fib } = samplePrograms;\n// TODO: fix slang crash bug\n// //@ts-ignore\n// for (const property in slang) {\n//   //@ts-ignore\n//   slang[property] = (...args: any[]) => {\n//     try {\n//       //@ts-ignore\n//       return slang[property](...args)\n//     } catch {\n//       return \"\\\"stack overflow\\\"\"\n//     }\n//   }\n// }\n\ntype sourceHighlight = {\n  highlight: boolean;\n  line: number;\n};\n\nfunction App() {\n  const [volatileSource, setSource] = useState(fib);\n  const [source] = useDebounce(volatileSource, 1000);\n\n  const [result, setResult] = useState(\"\");\n\n  const [i2code, setI2code] = useState(i2compile(source));\n  const i2codeString = stringOfCode(i2code).slice(1, -1);\n  const [i3code, setI3code] = useState(i3compile(source));\n  const i3codeString = stringOfCode(i3code);\n  const [jargonCode, setJargonCode] = useState(jargonCompile(source));\n  const jargonCodeString = stringOfCode(jargonCode);\n\n  const [showI2, setShowI2] = useState(false);\n  const [showI3, setShowI3] = useState(false);\n  const [showJargon, setShowJargon] = useState(false);\n\n  const [volatileSourceHighlight, setSourceHighlight] =\n    useState<sourceHighlight>({\n      highlight: false,\n      line: 0,\n    });\n  const [sourceHighlight] = useDebounce(volatileSourceHighlight, 50);\n\n  const decorationsTargetHandler = (code: code) => (e: any, m: any) => {\n    if (!sourceHighlight.highlight) return [];\n\n    const linesToHighlight = highlightRowsForLocation(\n      code,\n      sourceHighlight.line\n    );\n\n    return linesToHighlight.map((l) => ({\n      range: new m.Range(l + 1, 1, l + 1, 1),\n      options: {\n        isWholeLine: true,\n        linesDecorationsClassName: \"currentLineDec\",\n      },\n    }));\n  };\n\n  const decorationsSourceHandler = (e: any, m: any) => {\n    if (!sourceHighlight.highlight) return [];\n\n    return [\n      {\n        range: new m.Range(sourceHighlight.line, 1, sourceHighlight.line, 1),\n        options: {\n          isWholeLine: true,\n          linesDecorationsClassName: \"currentLineDec\",\n        },\n      },\n    ];\n  };\n\n  useKeypress([\"Escape\"], () => {\n    setShowI2(false);\n    setShowI3(false);\n    setShowJargon(false);\n  });\n\n  const monaco = useMonaco();\n\n  useEffect(() => {\n    monaco?.editor.setTheme(\"vs-dark\");\n    monaco?.languages.register({ id: \"Slang\" });\n    monaco?.languages.setMonarchTokensProvider(\"Slang\", languageDef);\n  }, [monaco]);\n\n  useEffect(() => {\n    setResult(\"\");\n    setI2code(i2compile(source));\n    setI3code(i3compile(source));\n    setJargonCode(jargonCompile(source));\n  }, [source]);\n\n  const onMouseMove = (code: code) => (event: any) => {\n    const lineNumber = event?.target?.position?.lineNumber;\n    if (lineNumber !== null && lineNumber !== undefined)\n      setSourceHighlight({ line: code[lineNumber - 1][0], highlight: true });\n  };\n  const onMouseMoveSource = (event: any) => {\n    const lineNumber = event?.target?.position?.lineNumber;\n    if (lineNumber !== null && lineNumber !== undefined)\n      setSourceHighlight({ line: lineNumber, highlight: true });\n  };\n  const onMouseLeave = () => setSourceHighlight({ highlight: false, line: 0 });\n\n  return (\n    <div className=\"App\">\n      <div className=\"editorWrapper\">\n        <h4>Slang</h4>\n        <Editor\n          height=\"86vh\"\n          defaultValue={source}\n          defaultLanguage=\"Slang\"\n          onMouseMove={onMouseMoveSource}\n          onMouseLeave={onMouseLeave}\n          decorations={decorationsSourceHandler}\n          onChange={(value, _) =>\n            value === undefined ? setSource(\"\") : setSource(value)\n          }\n          options={{\n            theme: \"vs-dark\",\n            minimap: { enabled: false },\n          }}\n        />\n        <div className=\"resultBox\">\n          <button disabled={!!result} onClick={() => setResult(interp(source))}>\n            {result === \"\" ? \"Compute Result\" : result}\n          </button>\n        </div>\n      </div>\n      <div className=\"editorWrapper\">\n        <h4>Interpreter 2</h4>\n        <Editor\n          defaultLanguage=\"javascript\"\n          height=\"86vh\"\n          value={i2codeString}\n          onMouseMove={onMouseMove(i2code)}\n          onMouseLeave={onMouseLeave}\n          decorations={decorationsTargetHandler(i2code)}\n          options={{\n            tabSize: 2,\n            readOnly: true,\n            theme: \"vs-dark\",\n            minimap: { enabled: false },\n          }}\n        />\n        <button onClick={() => setShowI2(!showI2)}>\n          Visualize Interpretation\n        </button>\n      </div>\n      <div className=\"editorWrapper\">\n        <h4>Interpreter 3</h4>\n        <Editor\n          defaultLanguage=\"javascript\"\n          value={i3codeString}\n          onMouseMove={onMouseMove(i3code)}\n          onMouseLeave={onMouseLeave}\n          decorations={decorationsTargetHandler(i3code)}\n          height=\"86vh\"\n          options={{\n            readOnly: true,\n            theme: \"vs-dark\",\n            minimap: { enabled: false },\n          }}\n        />\n        <button onClick={() => setShowI3(!showI3)}>\n          Visualize Interpretation\n        </button>\n      </div>\n      <div className=\"editorWrapper\">\n        <h4>Jargon</h4>\n        <Editor\n          defaultLanguage=\"javascript\"\n          value={jargonCodeString}\n          onMouseMove={onMouseMove(jargonCode)}\n          onMouseLeave={onMouseLeave}\n          decorations={decorationsTargetHandler(jargonCode)}\n          height=\"86vh\"\n          options={{\n            readOnly: true,\n            theme: \"vs-dark\",\n            minimap: { enabled: false },\n          }}\n        />\n        <button onClick={() => setShowJargon(!showJargon)}>\n          Visualize Interpretation\n        </button>\n      </div>\n      {showI2 ? (\n        <Interpreter2 source={source} onClose={() => setShowI2(false)} />\n      ) : null}\n      {showI3 ? (\n        <Interpreter3 source={source} onClose={() => setShowI3(false)} />\n      ) : null}\n      {showJargon ? (\n        <InterpreterJargon\n          source={source}\n          onClose={() => setShowJargon(false)}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}