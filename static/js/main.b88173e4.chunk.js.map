{"version":3,"sources":["LanguageDef.ts","SamplePrograms.ts","util.ts","Editor.tsx","Progress.tsx","slangWrapper.ts","Interpreter2.tsx","Interpreter3.tsx","InterpreterJargon.tsx","App.tsx","index.tsx"],"names":["languageDef","keywords","typeKeywords","operators","symbols","escapes","tokenizer","root","cases","include","token","bracket","next","comment","string","whitespace","samplePrograms","fib","fun","gcd","useKeypress","keys","handler","eventListenerRef","useRef","useEffect","current","event","includes","key","eventListener","window","addEventListener","removeEventListener","Editor","props","setDecorations","useState","decorations","editorRef","monacoRef","onMouseMoveRef","onMouseMove","onMouseLeaveRef","onMouseLeave","keyDownRef","onKeyDown","old_dec","deltaDecorations","onMount","e","m","browserEvent","keyHandler","index","setIndex","size","Progress","values","n","length","className","onClick","selectedIndex","appearance","onSelect","i2compile","s","JSON","parse","slang","interp2Code","i3compile","interp3Code","jargonCompile","jargonCode","computeI2steps","interp2","computeI3steps","interp3","computeJargonSteps","jargon","stringOfCode","c","map","join","trimClosures","ss","i","split","slice","Interpreter2","source","onClose","steps","setSteps","step","setStep","codeStack","envStack","memory","showNestedInstructions","setShowNestedInstructions","codeStackS","envStackS","memoryS","showMem","some","value","language","options","readOnly","theme","lineNumbers","lineNumber","toString","Interpreter3","installedCode","stepList","filter","currentInst","revealRange","Range","range","isWholeLine","linesDecorationsClassName","minimap","enabled","Cytoscape","use","klay","nodeStyle","nodeTp","style","shape","color","InterpreterJargon","stepsList","installedCodeS","stack","cp","fp","heap","heap_graph","reverse","currentFrame","showMemory","show","val","code","showHeap","pointers","setPointers","nodes","edges","elements","v","data","tp","onMouseNodeOver","useDebouncedCallback","target","_private","isCI","pointer","parseInt","id","onMouseNodeOff","width","setPosition","column","height","cy","on","_evt","layout","name","direction","borderSpacing","spacing","run","fit","App","volatileSource","setSource","useDebounce","result","setResult","i2code","setI2code","i2codeString","i3code","setI3code","i3codeString","setJargonCode","jargonCodeString","showI2","setShowI2","showI3","setShowI3","showJargon","setShowJargon","highlight","line","volatileSourceHighlight","setSourceHighlight","sourceHighlight","decorationsTargetHandler","l","reduce","linesToHighlight","codeLine","monaco","useMonaco","editor","setTheme","languages","register","setMonarchTokensProvider","position","undefined","defaultValue","defaultLanguage","onChange","_","disabled","interp0","tabSize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAgFeA,EAhFK,CAClBC,SAAU,CACR,OAAQ,QAAS,MAAO,MAAO,MAC/B,MAAO,MAAO,OAAQ,KAAM,KAAM,OAClC,OAAQ,MAAO,MAAO,KAAM,QAAS,MACrC,QAAS,KAAM,MAGjBC,aAAc,CACZ,MAAO,OAAQ,OAAQ,UAGzBC,UAAW,CACT,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,KAAM,IAAK,KAChB,KAAM,IAAK,KAAM,IACjB,IAAK,MAIPC,QAAU,sBAGVC,QAAS,KAGTC,UAAW,CACTC,KAAM,CAEJ,CAAC,gBAAiB,CAAEC,MAAO,CAAE,gBAAiB,UACjB,YAAa,UACb,WAAY,gBACzC,CAAC,cAAe,mBAGhB,CAAEC,QAAS,eAGX,CAAC,YAAa,aACd,CAAC,mBAAoB,aACrB,CAAC,WAAY,CAAED,MAAO,CAAE,aAAc,WACd,WAAc,MAGtC,CAAC,0BAA2B,gBAC5B,CAAC,oBAAqB,cACtB,CAAC,MAAO,UAGR,CAAC,kBAAmB,kBACpB,CAAC,IAAM,CAAEE,MAAO,eAAgBC,QAAS,QAASC,KAAM,YAGxD,CAAC,WAAY,UACb,CAAC,mBAAoB,CAAC,SAAS,gBAAgB,WAC/C,CAAC,IAAK,mBAGRC,QAAS,CACP,CAAC,SAAU,WACX,CAAC,OAAW,UAAW,SACvB,CAAC,SAAa,UAAW,QACzB,CAAC,OAAU,YAGbC,OAAQ,CACN,CAAC,UAAY,UACb,CAAC,WAAY,iBACb,CAAC,MAAY,yBACb,CAAC,IAAY,CAAEJ,MAAO,eAAgBC,QAAS,SAAUC,KAAM,UAGjEG,WAAY,CACV,CAAC,aAAc,SACf,CAAC,OAAc,UAAW,eC/BjBC,EA5CQ,CACrBC,IAAI,2KAYJC,IAAI,yQAYJC,IAAI,gXCrBOC,EAAc,SAACC,EAAgBC,GAC1C,IAAMC,EAAmBC,kBAAgB,eAEzCC,qBAAU,WACRF,EAAiBG,QAAU,SAACC,GACtBN,EAAKO,SAASD,EAAME,OACf,OAAPP,QAAO,IAAPA,KAAUK,OAGb,CAACN,EAAMC,IAEVG,qBAAU,WACR,IAAMK,EAAgB,SAACH,GACrBJ,EAAiBG,QAAQC,IAG3B,OADAI,OAAOC,iBAAiB,UAAWF,GAC5B,WACLC,OAAOE,oBAAoB,UAAWH,MAEvC,K,cCiDUI,EA7DA,SAACC,GACd,IAAMC,EAAiBC,mBAAS,IAAI,GAC5BC,EAAgBH,EAAhBG,YAEFC,EAAYf,mBACZgB,EAAYhB,mBAeZiB,EAAiBjB,iBAAOW,EAAMO,aACpCD,EAAef,QAAUS,EAAMO,YAE/B,IAAMC,EAAkBnB,iBAAOW,EAAMS,cACrCD,EAAgBjB,QAAUS,EAAMS,aAEhC,IAAMC,EAAarB,iBAAOW,EAAMW,WAehC,OAdArB,qBAAU,WACRoB,EAAWnB,QAAUS,EAAMW,YAC1B,CAACX,EAAMW,YAEVrB,qBAAU,WACJa,GAAeC,EAAUb,SAAWc,EAAUd,SAChDU,GAAe,SAACW,GAAD,uBACbR,EAAUb,eADG,aACb,EAAmBsB,iBACjBD,EACAT,EAAYC,EAAUb,QAASc,EAAUd,eAG9C,CAACY,EAAaF,IAGf,cAAC,IAAD,2BACMD,GADN,IAEEc,QAAS,SAACC,EAAGC,GACXD,EAAER,aAAY,SAACQ,GACTT,EAAef,SAASe,EAAef,QAAQwB,MAErDA,EAAEN,cAAa,SAACM,GACVP,EAAgBjB,SAASiB,EAAgBjB,QAAQwB,MAEnDf,EAAMc,SAASd,EAAMc,QAAQC,EAAGC,GA5C1B,SAACD,EAAQC,GACvBZ,EAAUb,QAAUwB,EACpBV,EAAUd,QAAUyB,EAChBb,GACFF,GAAe,SAACW,GAAD,uBACbR,EAAUb,eADG,aACb,EAAmBsB,iBACjBD,EACAT,EAAYC,EAAUb,QAASc,EAAUd,aAsC3CuB,CAAQC,EAAGC,GACXD,EAAEJ,WAAU,YAAwD,IAArDM,EAAoD,EAApDA,aACTP,EAAWnB,SAASmB,EAAWnB,QAAQ0B,W,cC7D9C,SAASC,EACdC,EACAC,EACAC,GAKA,OAAO,SAAC3B,GACN,OAAQA,GACN,IAAK,aALS0B,IAAYD,EAAQ,GAAKE,EAAQA,GAAQA,GAOrD,MACF,IAAK,YAPSD,IAAYD,EAAQ,GAAKE,EAAQA,GAAQA,KAc7D,IAiCeC,EAjCE,SAAC,GAQX,IAPLC,EAOI,EAPJA,OACAJ,EAMI,EANJA,MACAC,EAKI,EALJA,SAMMI,EAAID,EAAOE,OAKXtC,EAAU+B,EAAWC,EAAOC,EAAUI,GAK5C,OAJAvC,EAAY,CAAC,aAAc,cAAc,SAAC8B,GAAD,OACvC5B,EAAQ4B,EAAErB,QAIV,sBAAKgC,UAAU,WAAf,UACE,wBAAQC,QATA,kBAAMP,IAAYD,EAAQ,GAAKK,EAAKA,GAAKA,IASjD,SAAuB,MACvB,cAAC,IAAD,CACEI,cAAeT,EACfI,OAAQA,EACRM,WAAY,WACZC,SAAU,gBAAGX,EAAH,EAAGA,MAAH,OAAgBC,EAAWA,EAASD,GAAS,QAEzD,wBAAQQ,QAjBA,kBAAMP,IAAYD,EAAQ,GAAKK,EAAKA,GAAKA,IAiBjD,SAAuB,U,QC7ChBO,EAAY,SAACC,GAAD,OAEvBC,KAAKC,MAAMC,MAAMC,YAAYJ,KAElBK,EAAY,SAACL,GAAD,OAEvBC,KAAKC,MAAMC,MAAMG,YAAYN,KAElBO,EAAgB,SAACP,GAAD,OAE3BC,KAAKC,MAAMC,MAAMK,WAAWR,KAEjBS,EAAiB,SAACT,GAE7B,OAAOC,KAAKC,MAAMC,MAAMO,QAAQV,KAGrBW,EAAiB,SAC5BX,GAGA,OAAOC,KAAKC,MAAMC,MAAMS,QAAQZ,KAGrBa,EAAqB,SAACb,GAEjC,OAAOC,KAAKC,MAAMC,MAAMW,OAAOd,KAG1B,SAASe,EAAaC,GAC3B,OAAOA,EAAEC,KAAI,uDAAeC,KAAK,MCvBnC,IAAMC,EAAe,SAACC,GACpB,OAAOA,EAAGH,KAAI,SAACjB,EAAGqB,GAAJ,OACZrB,EAAEP,OAAS,GAAKO,EAAEsB,MAAM,MAAMJ,KAAK,KAAKK,MAAM,EAAG,IAAM,MAAQvB,MAyFpDwB,EArFM,SAAC,GAMf,IALLC,EAKI,EALJA,OACAC,EAII,EAJJA,QAKA,EAA0BxD,mBAAgBuC,EAAegB,IAAzD,mBAAOE,EAAP,KAAcC,EAAd,KAEAtE,qBAAU,WACRsE,EAASnB,EAAegB,MACvB,CAACA,IAEJ,MAAwBvD,mBAAS,GAAjC,mBAAO2D,EAAP,KAAaC,EAAb,KACA,cAAsCH,EAAME,GAA5C,GAAOE,EAAP,KAAkBC,EAAlB,KAA4BC,EAA5B,KAEA,EAA4D/D,oBAAS,GAArE,mBAAOgE,EAAP,KAA+BC,EAA/B,KAEMC,GACJF,EAAyBH,EAAYZ,EAAaY,IAClDb,KAAK,MACDmB,GACJH,EAAyBF,EAAWb,EAAaa,IACjDd,KAAK,MACDoB,EAAUL,EAAOf,KAAK,MAEtBqB,EAAUZ,EAAMa,MAAK,yDAAkB/C,OAAS,KAEhDtC,EAAU+B,EAAW2C,EAAMC,EAASH,EAAMlC,QAEhD,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,uCACQmC,EADR,MACiBA,EAAO,EAAIF,EAAME,EAAO,GAAG,GAAG,GAAK,WAEpD,yBACElC,QAAS,kBAAMwC,GAA2BD,IAD5C,UAGGA,EAAyB,OAAS,OAHrC,0BAKCR,EAAU,wBAAQ/B,QAAS+B,EAAjB,eAAuC,QAEpD,sBAAKhC,UAAU,qBAAf,UACE,cAAC,EAAD,CACE+C,MAAOL,EACPM,SAAS,aACT/D,UAAW,SAACI,GAAD,OAAO5B,EAAQ4B,EAAErB,MAC5BiF,QAAS,CACPC,UAAU,EACVC,MAAO,UACPC,YAAa,SAACC,GAAD,OACXX,EAAWd,MAAM,MAAM7B,OAASsD,EAAa,MAGnD,cAAC,EAAD,CACEN,MAAOJ,EACP3C,UAAU,gBACVgD,SAAS,aACT/D,UAAW,SAACI,GAAD,OAAO5B,EAAQ4B,EAAErB,MAC5BiF,QAAS,CACPC,UAAU,EACVC,MAAO,UACPC,YAAa,SAACC,GAAD,OACXV,EAAUf,MAAM,MAAM7B,OAASsD,EAAa,MAGjDR,EACC,cAAC,EAAD,CACEE,MAAOH,EACPI,SAAS,aACT/D,UAAW,SAACI,GAAD,OAAO5B,EAAQ4B,EAAErB,MAC5BiF,QAAS,CACPC,UAAU,EACVC,MAAO,UACPC,YAAa,SAACC,GAAD,OAAyBA,EAAa,GAAGC,eAGxD,QAEN,cAAC,EAAD,CAAUzD,OAAQoC,EAAOxC,MAAO0C,EAAMzC,SAAU0C,QCYvCmB,MAjGM,SAAC,GAMf,IALLxB,EAKI,EALJA,OACAC,EAII,EAJJA,QAKA,EAA0BxD,mBAAgByC,EAAec,IAAzD,mBAAOE,EAAP,KAAcC,EAAd,KAEAtE,qBAAU,WACRsE,EAASjB,EAAec,MACvB,CAACA,IAEJ,kBAAgCE,EAAhC,GAAKuB,EAAL,KAAoBC,EAApB,KAEAD,EAAsBA,EA4EnB5B,MAAM,MACNL,KAAI,SAACI,GAAD,OAAOA,EAAEC,MAAM,KAAKC,MAAM,GAAGL,KAAK,QACtCkC,QAAO,SAAC/B,GAAD,OAAOA,EAAE5B,OAAS,KACzByB,KAAK,MA7ER,MAAwBhD,mBAAS,GAAjC,mBAAO2D,EAAP,KAAaC,EAAb,KAEA,cAAwCqB,EAAStB,GAAjD,GAAOwB,EAAP,KAAoBrB,EAApB,KAA8BC,EAA9B,KACMI,EAAYL,EAASd,KAAK,MAC1BoB,EAAUL,EAAOf,KAAK,MACtBqB,EAAUY,EAASX,MAAK,yDAAkB/C,OAAS,KAenDtC,EAAU+B,EAAW2C,EAAMC,EAASqB,EAAS1D,QAEnD,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,uCACQmC,EADR,SAGCH,EAAU,wBAAQ/B,QAAS+B,EAAjB,eAAuC,QAEpD,sBAAKhC,UAAU,qBAAf,UACE,cAAC,EAAD,CACE+C,MAAOS,EACPR,SAAS,aACT/D,UAAW,SAACI,GAAD,OAAO5B,EAAQ4B,EAAErB,MAC5BS,YA5BmB,SAACY,EAAQC,GAElC,OADAD,EAAEuE,YAAY,IAAItE,EAAEuE,MAAMF,EAAa,EAAGA,EAAa,IAChD,CACL,CACEG,MAAO,IAAIxE,EAAEuE,MAAMF,EAAc,EAAG,EAAGA,EAAc,EAAG,GACxDV,QAAS,CACPc,aAAa,EACbC,0BAA2B,qBAsB3Bf,QAAS,CACPC,UAAU,EACVE,YAAa,SAACC,GAAD,OAAyBA,EAAa,GAAGC,YACtDH,MAAO,aAGX,cAAC,EAAD,CACEJ,MAAOJ,EACPK,SAAS,aACT/D,UAAW,SAACI,GAAD,OAAO5B,EAAQ4B,EAAErB,MAC5BiF,QAAS,CACPC,UAAU,EACVE,YAAa,SAACC,GAAD,OACXV,EAAUf,MAAM,MAAM7B,OAASsD,EAAa,GAC9CY,QAAS,CAAEC,SAAS,MAGvBrB,EACC,cAAC,EAAD,CACEE,MAAOH,EACPI,SAAS,aACT/D,UAAW,SAACI,GAAD,OAAO5B,EAAQ4B,EAAErB,MAC5BiF,QAAS,CACPC,UAAU,EACVE,YAAa,SAACC,GAAD,OAAyBA,EAAa,GAAGC,YACtDH,MAAO,UACPc,QAAS,CAAEC,SAAS,MAGtB,QAEN,cAAC,EAAD,CAAUrE,OAAQoC,EAAM,GAAIxC,MAAO0C,EAAMzC,SAAU0C,Q,2DCvFzD+B,IAAUC,IAAIC,KAyQd,SAASC,EAAUC,GACjB,IAAIC,EACJ,OAAQD,GACN,IAAK,QACHC,EAAQ,CACNC,MAAO,SACP,mBAAoB,SAEtB,MACF,IAAK,SACHD,EAAQ,CACNC,MAAO,SACP,mBAAoB,UAEtB,MACF,IAAK,OACHD,EAAQ,CACNC,MAAO,MACP,mBAAoB,OAEtB,MACF,IAAK,OACHD,EAAQ,CACNC,MAAO,YACP,mBAAoB,SAEtB,MACF,IAAK,WACHD,EAAQ,CACN,mBAAoB,SAW1B,OAPAA,EAAK,2BACAA,GADA,IAEH,gBAAiB,MACjB,qBAAsB,OACtB,YAAa,OACbE,MAAO,UAKIC,MAxQW,SAAC,GAMpB,IALL5C,EAKI,EALJA,OACAC,EAII,EAJJA,QAKA,EAA0BxD,mBAAS2C,EAAmBY,IAAtD,mBAAOE,EAAP,KAAcC,EAAd,KAEAtE,qBAAU,WACRsE,EAASf,EAAmBY,MAC3B,CAACA,IAEJ,kBAAmCE,EAAnC,GAAOuB,EAAP,KAAsBoB,EAAtB,KAEMC,EAAiBrB,EAAchC,KAAK,MAE1C,EAAwBhD,mBAAS,GAAjC,mBAAO2D,EAAP,KAAaC,EAAb,KAEA,EAA4CwC,EAAUzC,GAA9C2C,EAAR,EAAQA,MAAOC,EAAf,EAAeA,GAAIC,EAAnB,EAAmBA,GAAIC,EAAvB,EAAuBA,KAAMC,EAA7B,EAA6BA,WAEvB5C,EAAWwC,EACdjD,QACAsD,UACA5D,KAAI,SAACjB,GAAD,OAAOA,EAAEuB,MAAM,MACnBL,KAAK,MAEFmC,EAAcoB,EAAK,EACnBK,EAAeN,EAAM/E,OAASiF,EAE9BzC,EAAS0C,EAAKzD,KAAK,MACnB6D,EAAaT,EAAU9B,MAAK,qBAAGmC,KAAgBlF,OAAS,KAE9D,EAAgCvB,mBAAmB,CACjDyG,KAAM,CACJK,MAAM,EACNC,IAAK,GAEPC,KAAM,CACJC,UAAU,EACVR,KAAM,KAPV,mBAAOS,EAAP,KAAiBC,EAAjB,KAWMlI,EAAU+B,EAAW2C,EAAMC,EAASwC,EAAU7E,QAuDpD,cAAuBmF,EAAvB,GAAOU,EAAP,KAAcC,EAAd,KAEMC,EAAQ,sBACTF,EAAMrE,KAAI,SAACwE,GAAD,MAAQ,CACnBC,KAAMD,EACNvB,MAAOF,EAAUyB,EAAEE,GAAG,SAHZ,YAKTJ,EAAMtE,KAAI,SAACwE,GAAD,MAAQ,CACnBC,KAAMD,QAIJG,EAAkBC,aAAqB,SAAC9G,GAC5C,IAAM2G,EAAO3G,EAAE+G,OAAOC,SAASL,KACzBM,EAAsB,SAAfN,EAAKC,GAAG,GACfM,EAAU,CACdtB,KAAM,CACJM,IAAKiB,SAASR,EAAKS,IAAM,EACzBnB,MAAM,GAERE,KAAM,CACJC,SAAUa,EACVrB,KAAMqB,EAAON,EAAKO,QAAU,EAAIb,EAASF,KAAKP,OAIlDU,EAAYY,KACX,IAEGG,EAAiBP,aAAqB,SAAC9G,GAC3CsG,EAAY,CACVV,KAAM,CACJM,IAAKG,EAAST,KAAKM,IACnBD,MAAM,GAERE,KAAM,CACJC,UAAU,EACVR,KAAMS,EAASF,KAAKP,UAGvB,IAEH,OACE,sBAAKjF,UAAU,cAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,uCACQmC,EADR,SAGCH,EAAU,wBAAQ/B,QAAS+B,EAAjB,eAAuC,QAEpD,sBAAKhC,UAAU,qBAAf,UACE,cAAC,EAAD,CACE+C,MAAO8B,EACP8B,MAAM,MACN3D,SAAS,aACT/D,UAAW,SAACI,GAAD,OAAO5B,EAAQ4B,EAAErB,MAC5BS,YA7GuB,SAACY,EAAQC,GAMtC,OALAD,EAAEuE,YAAY,IAAItE,EAAEuE,MAAMF,EAAa,EAAGA,EAAa,IACvDtE,EAAEuH,YAAY,CACZC,OAAQ,EACRxD,WAAYM,IAEP,CACL,CACEG,MAAO,IAAIxE,EAAEuE,MAAMF,EAAa,EAAGA,EAAa,GAChDV,QAAS,CACPc,aAAa,EACbC,0BAA2B,mBAG/B,CACEF,MAAO,IAAIxE,EAAEuE,MAAM6B,EAASF,KAAKP,KAAM,EAAGS,EAASF,KAAKP,KAAM,GAC9DhC,QAAS,CACPc,aAAa,EACbC,0BAA2B0B,EAASF,KAAKC,SACrC,iBACA,OA0FJxC,QAAS,CACPC,UAAU,EACVE,YAAa,SAACC,GAAD,OAAyBA,EAAa,GAAGC,YACtDH,MAAO,aAGX,cAAC,EAAD,CACEJ,MAAOT,EACPU,SAAS,aACT2D,MAAM,MACN1H,UAAW,SAACI,GAAD,OAAO5B,EAAQ4B,EAAErB,MAC5BS,YA/FsB,SAACY,EAAQC,GACrC,MAAO,CACL,CACEwE,MAAO,IAAIxE,EAAEuE,MAAMuB,EAAc,EAAGA,EAAc,GAClDnC,QAAS,CACPc,aAAa,EACbC,0BAA2B,sBA0F3Bf,QAAS,CACPC,UAAU,EACVE,YAAa,SAACC,GAAD,OACVf,EAASV,MAAM,MAAM7B,OAASsD,EAAa,GAAGC,YACjDW,QAAS,CAAEC,SAAS,MAGxB,sBAAKlE,UAAU,YAAf,UACGqF,EACC,cAAC,EAAD,CACEtC,MAAOR,EACPuE,OAAO,MACPrI,YAhGmB,SAACY,EAAQC,GAItC,OAHIoG,EAAST,KAAKK,MAChBjG,EAAEuE,YAAY,IAAItE,EAAEuE,MAAM6B,EAAST,KAAKM,IAAK,EAAGG,EAAST,KAAKM,IAAK,IAE9D,CACL,CACEzB,MAAO,IAAIxE,EAAEuE,MAAM6B,EAAST,KAAKM,IAAK,EAAGG,EAAST,KAAKM,IAAK,GAC5DtC,QAAS,CACPc,aAAa,EACbC,0BAA2B0B,EAAST,KAAKK,KAAO,iBAAmB,OAwF/DtC,SAAS,aACT/D,UAAW,SAACI,GAAD,OAAO5B,EAAQ4B,EAAErB,MAC5BiF,QAAS,CACPC,UAAU,EACVE,YAAa,SAACC,GAAD,OACVA,EAAa,GAAGC,YACnBH,MAAO,UACPc,QAAS,CAAEC,SAAS,MAGtB,KAEJ,cAAC,IAAD,CACEuC,GAAG,OACHX,SAAUA,EACVtB,MAAO,CAAEsC,OAAQ,OACjBC,GAAI,SAACA,GAAD,OACFA,EAAGC,GAAG,MAAO,QAAQ,SAACC,GACpBF,EAAGG,OAAO,CACRC,KAAM,OAEN9C,KAAM,CACJ+C,UAAW,OACXC,cAAe,GACfC,QAAS,MAEVC,MACHR,EAAGS,MACHT,EAAGC,GAAG,YAAa,OAAQd,GAC3Ba,EAAGC,GAAG,WAAY,OAAQN,eAMpC,cAAC,EAAD,CAAU7G,OAAQoC,EAAM,GAAIxC,MAAO0C,EAAMzC,SAAU0C,QC1PjDhF,G,MAAQD,EAARC,KA+MOqK,MA3Lf,WACE,MAAoCjJ,mBAASpB,GAA7C,mBAAOsK,EAAP,KAAuBC,EAAvB,KACA,EAAiBC,YAAYF,EAAgB,KAAtC3F,EAAP,oBAEA,EAA4BvD,mBAAS,IAArC,mBAAOqJ,EAAP,KAAeC,EAAf,KAEA,EAA4BtJ,mBAAS6B,EAAU0B,IAA/C,mBAAOgG,EAAP,KAAeC,EAAf,KACMC,EAAe5G,EAAa0G,GAAQlG,MAAM,GAAI,GACpD,EAA4BrD,mBAASmC,EAAUoB,IAA/C,mBAAOmG,EAAP,KAAeC,EAAf,KACMC,EAAe/G,EAAa6G,GAClC,EAAoC1J,mBAASqC,EAAckB,IAA3D,mBAAOjB,EAAP,KAAmBuH,EAAnB,KACMC,EAAmBjH,EAAaP,GAEtC,EAA4BtC,oBAAS,GAArC,mBAAO+J,EAAP,KAAeC,EAAf,KACA,EAA4BhK,oBAAS,GAArC,mBAAOiK,EAAP,KAAeC,EAAf,KACA,EAAoClK,oBAAS,GAA7C,mBAAOmK,EAAP,KAAmBC,EAAnB,KAEA,GACEpK,mBAA0B,CACxBqK,WAAW,EACXC,KAAM,IAHV,qBAAOC,GAAP,MAAgCC,GAAhC,MAKA,GAA0BpB,YAAYmB,GAAyB,IAAxDE,GAAP,qBAEMC,GAA2B,SAAC1D,GAAD,OAAgB,SAACnG,EAAQC,GACxD,OAAK2J,GAAgBJ,WJ3BgBvH,EI8BnCkE,EJ9B4C2D,EI+B5CF,GAAgBH,KJ9BbxH,EAAE8H,QACP,SAACC,EAAkBC,EAAU3H,GAA7B,OACE2H,EAAS,KAAOH,EAAhB,CAAqBxH,GAArB,mBAA2B0H,IAAoBA,IACjD,KI8BwB9H,KAAI,SAAC4H,GAAD,MAAQ,CAClCrF,MAAO,IAAIxE,EAAEuE,MAAMsF,EAAI,EAAG,EAAGA,EAAI,EAAG,GACpClG,QAAS,CACPc,aAAa,EACbC,0BAA2B,sBAXQ,GAEvC,IJ7BqC1C,EAAS6H,IIyDhD5L,EAAY,CAAC,WAAW,WACtBiL,GAAU,GACVE,GAAU,GACVE,GAAc,MAGhB,IAAMW,GAASC,cAEf5L,qBAAU,WACF,OAAN2L,SAAM,IAANA,OAAQE,OAAOC,SAAS,WAClB,OAANH,SAAM,IAANA,OAAQI,UAAUC,SAAS,CAAEnD,GAAI,UAC3B,OAAN8C,SAAM,IAANA,OAAQI,UAAUE,yBAAyB,QAAS1N,KACnD,CAACoN,KAEJ3L,qBAAU,WACRkK,EAAU,IACVE,EAAU3H,EAAU0B,IACpBoG,EAAUxH,EAAUoB,IACpBsG,EAAcxH,EAAckB,MAC3B,CAACA,IAEJ,IAAMlD,GAAc,SAAC2G,GAAD,OAAgB,SAAC1H,GAAgB,IAAD,IAC5CuF,EAAU,OAAGvF,QAAH,IAAGA,GAAH,UAAGA,EAAOsI,cAAV,iBAAG,EAAe0D,gBAAlB,aAAG,EAAyBzG,WACzB,OAAfA,QAAsC0G,IAAf1G,GACzB2F,GAAmB,CAAEF,KAAMtD,EAAKnC,EAAa,GAAG,GAAIwF,WAAW,MAO7D9J,GAAe,kBAAMiK,GAAmB,CAAEH,WAAW,EAAOC,KAAM,KAExE,OACE,sBAAK9I,UAAU,MAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,uCACA,cAAC,EAAD,CACE8G,OAAO,OACPkD,aAAcjI,EACdkI,gBAAgB,QAChBpL,YAfkB,SAACf,GAAgB,IAAD,IAClCuF,EAAU,OAAGvF,QAAH,IAAGA,GAAH,UAAGA,EAAOsI,cAAV,iBAAG,EAAe0D,gBAAlB,aAAG,EAAyBzG,WACzB,OAAfA,QAAsC0G,IAAf1G,GACzB2F,GAAmB,CAAEF,KAAMzF,EAAYwF,WAAW,KAa9C9J,aAAcA,GACdN,YAzDyB,SAACY,EAAQC,GACxC,OAAK2J,GAAgBJ,UAEd,CACL,CACE/E,MAAO,IAAIxE,EAAEuE,MAAMoF,GAAgBH,KAAM,EAAGG,GAAgBH,KAAM,GAClE7F,QAAS,CACPc,aAAa,EACbC,0BAA2B,oBAPM,IAyDjCkG,SAAU,SAACnH,EAAOoH,GAAR,OACcxC,OAAZoC,IAAVhH,EAAgC,GAAgBA,IAElDE,QAAS,CACPE,MAAO,UACPc,QAAS,CAAEC,SAAS,MAGxB,qBAAKlE,UAAU,YAAf,SACE,wBAAQoK,WAAYvC,EAAQ5H,QAAS,kBAAM6H,GJjJ9BxH,EIiJ+CyB,EJjJjCtB,MAAM4J,QAAQ/J,KAA7B,IAACA,GIiJb,SACc,KAAXuH,EAAgB,iBAAmBA,SAI1C,sBAAK7H,UAAU,gBAAf,UACE,+CACA,cAAC,EAAD,CACEiK,gBAAgB,aAChBnD,OAAO,OACP/D,MAAOkF,EACPpJ,YAAaA,GAAYkJ,GACzBhJ,aAAcA,GACdN,YAAayK,GAAyBnB,GACtC9E,QAAS,CACPqH,QAAS,EACTpH,UAAU,EACVC,MAAO,UACPc,QAAS,CAAEC,SAAS,MAGxB,wBAAQjE,QAAS,kBAAMuI,GAAWD,IAAlC,yCAIF,sBAAKvI,UAAU,gBAAf,UACE,+CACA,cAAC,EAAD,CACEiK,gBAAgB,aAChBlH,MAAOqF,EACPvJ,YAAaA,GAAYqJ,GACzBnJ,aAAcA,GACdN,YAAayK,GAAyBhB,GACtCpB,OAAO,OACP7D,QAAS,CACPC,UAAU,EACVC,MAAO,UACPc,QAAS,CAAEC,SAAS,MAGxB,wBAAQjE,QAAS,kBAAMyI,GAAWD,IAAlC,yCAIF,sBAAKzI,UAAU,gBAAf,UACE,wCACA,cAAC,EAAD,CACEiK,gBAAgB,aAChBlH,MAAOuF,EACPzJ,YAAaA,GAAYiC,GACzB/B,aAAcA,GACdN,YAAayK,GAAyBpI,GACtCgG,OAAO,OACP7D,QAAS,CACPC,UAAU,EACVC,MAAO,UACPc,QAAS,CAAEC,SAAS,MAGxB,wBAAQjE,QAAS,kBAAM2I,GAAeD,IAAtC,yCAIDJ,EACC,cAAC,EAAD,CAAcxG,OAAQA,EAAQC,QAAS,kBAAMwG,GAAU,MACrD,KACHC,EACC,cAAC,EAAD,CAAc1G,OAAQA,EAAQC,QAAS,kBAAM0G,GAAU,MACrD,KACHC,EACC,cAAC,EAAD,CACE5G,OAAQA,EACRC,QAAS,kBAAM4G,GAAc,MAE7B,SC3NV2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b88173e4.chunk.js","sourcesContent":["const languageDef = {\n  keywords: [\n    \"true\", \"false\", \"ref\", \"inl\", \"inr\",\n    \"fst\", \"snd\", \"case\", \"of\", \"if\", \"then\",\n    \"else\", \"let\", \"fun\", \"in\", \"begin\", \"end\",\n    \"while\", \"do\", \"()\"\n  ],\n\n  typeKeywords: [\n    'int', 'bool', 'unit', 'banter'\n  ],\n\n  operators: [\n    \",\", \":\", \";\", \"+\",\n    \"-\", \"*\", \"/\", \"~\",\n    \"=\", \":=\", \"<\", \"&&\",\n    \"||\", \"|\", \"->\", \"?\",\n    \"!\", \"()\"\n  ],\n\n  // we include these common regular expressions\n  symbols:  /[=><!~?:&|+\\-*/^%]+/,\n\n  // C# style strings\n  escapes: /\\\\/,\n\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n      // identifiers and keywords\n      [/[a-z_$][\\w$]*/, { cases: { '@typeKeywords': 'keyword',\n                                   '@keywords': 'keyword',\n                                   '@default': 'identifier' } }],\n      [/[A-Z][\\w$]*/, 'type.identifier' ],  // to show class names nicely\n\n      // whitespace\n      { include: '@whitespace' },\n\n      // delimiters and operators\n      [/[{}()[\\]]/, '@brackets'],\n      [/[<>](?!@symbols)/, '@brackets'],\n      [/@symbols/, { cases: { '@operators': 'operator',\n                              '@default'  : '' } } ],\n\n      // numbers\n      [/\\d*\\.\\d+([eE][-+]?\\d+)?/, 'number.float'],\n      [/0[xX][0-9a-fA-F]+/, 'number.hex'],\n      [/\\d+/, 'number'],\n\n      // strings\n      [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid' ],  // non-teminated string\n      [/\"/,  { token: 'string.quote', bracket: '@open', next: '@string' } ],\n\n      // characters\n      [/'[^\\\\']'/, 'string'],\n      [/(')(@escapes)(')/, ['string','string.escape','string']],\n      [/'/, 'string.invalid']\n    ],\n\n    comment: [\n      [/[^(*]+/, 'comment' ],\n      [/\\(\\*/,    'comment', '@push' ],    // nested comment\n      [\"\\\\*\\\\)\",    'comment', '@pop'  ],\n      [/[(*]/,   'comment' ]\n    ],\n\n    string: [\n      [/[^\\\\\"]+/,  'string'],\n      [/@escapes/, 'string.escape'],\n      [/\\\\./,      'string.escape.invalid'],\n      [/\"/,        { token: 'string.quote', bracket: '@close', next: '@pop' } ]\n    ],\n\n    whitespace: [\n      [/[ \\t\\r\\n]+/, 'white'],\n      [/\\(\\*/,       'comment', '@comment' ],\n    ],\n  },\n};\n\nexport default languageDef;\n","const samplePrograms = {\n  fib: `let fib( m : int) : int =\n    if m = 0\n    then 1\n    else if m = 1\n        then 1\n        else fib (m - 1) + fib (m -2)\n        end\n    end\nin\n    fib(1)\nend`,\n\n  fun: `(* the reason we need closures on the heap ... *) \n\nlet f(y : int) : int -> int =\n  let g(x :int) : int = y + x in g end\nin\n  let add21 : int -> int  = f(21) in\n      let add17 : int -> int  = f(17) in\n         add17(3) + add21(60)\n       end\n  end\nend`,\n\n  gcd: `let gcd(p : int * int) : int =\n    let m : int = fst p in\n       let  n : int = snd p in\n          if m = n\n          then m\n          else if m < n\n               then gcd(m, n - m)\n               else gcd(m - n, n)\n               end\n           end\n       end\n     end\nin\n   let x : int = 10 in\n      let  y : int = 2 in gcd(x, y) end\n    end\nend`\n};\n\nexport default samplePrograms;\n","import { useEffect, useRef } from 'react';\n\ntype Handler = (event: KeyboardEvent) => void;\n\nexport const useKeypress = (keys: string[], handler: Handler) => {\n  const eventListenerRef = useRef<Handler>(() => {});\n\n  useEffect(() => {\n    eventListenerRef.current = (event: KeyboardEvent) => {\n      if (keys.includes(event.key)) {\n        handler?.(event);\n      }\n    };\n  }, [keys, handler]);\n\n  useEffect(() => {\n    const eventListener = (event: KeyboardEvent) => {\n      eventListenerRef.current(event);\n    };\n    window.addEventListener('keydown', eventListener);\n    return () => {\n      window.removeEventListener('keydown', eventListener);\n    };\n  }, []);\n};","import EditorInternal, { EditorProps, Monaco } from \"@monaco-editor/react\";\nimport { useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\n\ninterface IEditorProps extends EditorProps {\n  onKeyDown?: (e: KeyboardEvent) => void;\n  decorations?: (editor: any, monaco: Monaco) => any;\n  onMouseMove?: (e: any) => void;\n  onMouseLeave?: (e: any) => void;\n}\n\nconst Editor = (props: IEditorProps) => {\n  const setDecorations = useState({})[1];\n  const { decorations } = props;\n\n  const editorRef = useRef<any>();\n  const monacoRef = useRef<any>();\n\n  const onMount = (e: any, m: any) => {\n    editorRef.current = e;\n    monacoRef.current = m;\n    if (decorations) {\n      setDecorations((old_dec) =>\n        editorRef.current?.deltaDecorations(\n          old_dec,\n          decorations(editorRef.current, monacoRef.current)\n        )\n      );\n    }\n  };\n\n  const onMouseMoveRef = useRef(props.onMouseMove);\n  onMouseMoveRef.current = props.onMouseMove;\n\n  const onMouseLeaveRef = useRef(props.onMouseLeave);\n  onMouseLeaveRef.current = props.onMouseLeave;\n\n  const keyDownRef = useRef(props.onKeyDown);\n  useEffect(() => {\n    keyDownRef.current = props.onKeyDown;\n  }, [props.onKeyDown]);\n\n  useEffect(() => {\n    if (decorations && editorRef.current && monacoRef.current)\n      setDecorations((old_dec) =>\n        editorRef.current?.deltaDecorations(\n          old_dec,\n          decorations(editorRef.current, monacoRef.current)\n        )\n      );\n  }, [decorations, setDecorations]);\n\n  return (\n    <EditorInternal\n      {...props}\n      onMount={(e, m) => {\n        e.onMouseMove((e: any) => {\n          if (onMouseMoveRef.current) onMouseMoveRef.current(e);\n        });\n        e.onMouseLeave((e: any) => {\n          if (onMouseLeaveRef.current) onMouseLeaveRef.current(e);\n        });\n        if (props.onMount) props.onMount(e, m);\n        onMount(e, m);\n        e.onKeyDown(({ browserEvent }: { browserEvent: KeyboardEvent }) => {\n          if (keyDownRef.current) keyDownRef.current(browserEvent);\n        });\n      }}\n    />\n  );\n};\n\nexport default Editor;\n","import { ProgressIndicator } from \"@atlaskit/progress-indicator\";\nimport \"./Stacks.css\";\nimport { useKeypress } from \"./util\";\n\nexport function keyHandler(\n  index: number,\n  setIndex: (i: number) => void,\n  size: number\n) {\n  const inc = () => setIndex((((index + 1) % size) + size) % size);\n  const dec = () => setIndex((((index - 1) % size) + size) % size);\n\n  return (key: string) => {\n    switch (key) {\n      case \"ArrowRight\":\n        inc();\n        break;\n      case \"ArrowLeft\":\n        dec();\n        break;\n    }\n  };\n}\n\nconst Progress = ({\n  values,\n  index,\n  setIndex,\n}: {\n  values: any[];\n  index: number;\n  setIndex: (n: number) => void;\n}) => {\n  const n = values.length;\n\n  const inc = () => setIndex((((index + 1) % n) + n) % n);\n  const dec = () => setIndex((((index - 1) % n) + n) % n);\n\n  const handler = keyHandler(index, setIndex, n);\n  useKeypress([\"ArrowRight\", \"ArrowLeft\"], (e: KeyboardEvent) =>\n    handler(e.key)\n  );\n\n  return (\n    <div className=\"progress\">\n      <button onClick={dec}>{\"<\"}</button>\n      <ProgressIndicator\n        selectedIndex={index}\n        values={values}\n        appearance={\"inverted\"}\n        onSelect={({ index }) => (setIndex ? setIndex(index) : null)}\n      />\n      <button onClick={inc}>{\">\"}</button>\n    </div>\n  );\n};\n\nexport default Progress;\n","import { jargonStepsT } from \"./InterpreterJargon\";\n\nexport type code = [number, string][];\n\n//@ts-ignore\nexport const interp = (s: string) => slang.interp0(s);\n\nexport const i2compile = (s: string): code =>\n  //@ts-ignore\n  JSON.parse(slang.interp2Code(s));\n\nexport const i3compile = (s: string): code =>\n  //@ts-ignore\n  JSON.parse(slang.interp3Code(s));\n\nexport const jargonCompile = (s: string): code =>\n  //@ts-ignore\n  JSON.parse(slang.jargonCode(s));\n\nexport const computeI2steps = (s: string): [string[], string[], string[]][] => {\n  //@ts-ignore\n  return JSON.parse(slang.interp2(s));\n};\n\nexport const computeI3steps = (\n  s: string\n): [string, [number, string[], string[]][]] => {\n  //@ts-ignore\n  return JSON.parse(slang.interp3(s));\n};\n\nexport const computeJargonSteps = (s: string): jargonStepsT => {\n  //@ts-ignore\n  return JSON.parse(slang.jargon(s));\n};\n\nexport function stringOfCode(c: code) {\n  return c.map(([_, s]) => s).join(\"\\n\");\n}\n\nexport function highlightRowsForLocation(c: code, l: number): number[] {\n  return c.reduce(\n    (linesToHighlight, codeLine, i) =>\n      codeLine[0] === l ? [i, ...linesToHighlight] : linesToHighlight,\n    [] as number[]\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nimport Editor from \"./Editor\";\nimport Progress, { keyHandler } from \"./Progress\";\nimport { computeI2steps } from \"./slangWrapper\";\n\nimport \"./Stacks.css\";\n\ntype CodeStack = string[];\ntype EnvStack = string[];\ntype Memory = string[];\n\ntype Steps = [CodeStack, EnvStack, Memory][];\n\nconst trimClosures = (ss: string[]) => {\n  return ss.map((s, i) =>\n    s.length > 40 ? s.split(\"\\n\").join(\" \").slice(0, 40) + \"...\" : s\n  );\n};\n\nconst Interpreter2 = ({\n  source,\n  onClose,\n}: {\n  source: string;\n  onClose?: () => void;\n}) => {\n  const [steps, setSteps] = useState<Steps>(computeI2steps(source));\n  // We only compile the steps if the prop changes\n  useEffect(() => {\n    setSteps(computeI2steps(source));\n  }, [source]);\n\n  const [step, setStep] = useState(0);\n  const [codeStack, envStack, memory] = steps[step];\n\n  const [showNestedInstructions, setShowNestedInstructions] = useState(false);\n\n  const codeStackS = (\n    showNestedInstructions ? codeStack : trimClosures(codeStack)\n  ).join(\"\\n\");\n  const envStackS = (\n    showNestedInstructions ? envStack : trimClosures(envStack)\n  ).join(\"\\n\");\n  const memoryS = memory.join(\"\\n\");\n\n  const showMem = steps.some(([_, __, s]) => s.length > 0);\n\n  const handler = keyHandler(step, setStep, steps.length);\n\n  return (\n    <div className=\"interpreter\">\n      <div className=\"interpreterTitle\">\n        <h3>\n          Step {step} - {step > 0 ? steps[step - 1][0][0] : \"Start\"}\n        </h3>\n        <button\n          onClick={() => setShowNestedInstructions(!showNestedInstructions)}\n        >\n          {showNestedInstructions ? \"Hide\" : \"Show\"} nested instructions\n        </button>\n        {onClose ? <button onClick={onClose}>X</button> : null}\n      </div>\n      <div className=\"interpreterEditors\">\n        <Editor\n          value={codeStackS}\n          language=\"javascript\"\n          onKeyDown={(e) => handler(e.key)}\n          options={{\n            readOnly: true,\n            theme: \"vs-dark\",\n            lineNumbers: (lineNumber: number) =>\n              codeStackS.split(\"\\n\").length - lineNumber + 1,\n          }}\n        />\n        <Editor\n          value={envStackS}\n          className=\"i2StackEditor\"\n          language=\"javascript\"\n          onKeyDown={(e) => handler(e.key)}\n          options={{\n            readOnly: true,\n            theme: \"vs-dark\",\n            lineNumbers: (lineNumber: number) =>\n              envStackS.split(\"\\n\").length - lineNumber + 1,\n          }}\n        />\n        {showMem ? (\n          <Editor\n            value={memoryS}\n            language=\"javascript\"\n            onKeyDown={(e) => handler(e.key)}\n            options={{\n              readOnly: true,\n              theme: \"vs-dark\",\n              lineNumbers: (lineNumber: number) => (lineNumber - 1).toString(),\n            }}\n          />\n        ) : null}\n      </div>\n      <Progress values={steps} index={step} setIndex={setStep} />\n    </div>\n  );\n};\n\nexport default Interpreter2;\n","import { useEffect, useState } from \"react\";\n\nimport Progress, { keyHandler } from \"./Progress\";\nimport Editor from \"./Editor\";\nimport { computeI3steps } from \"./slangWrapper\";\n\nimport \"./Stacks.css\";\nimport { Monaco } from \"@monaco-editor/react\";\n\ntype Code = string;\ntype CodePointer = number;\ntype EnvStack = string[];\ntype Memory = string[];\ntype Steps = [Code, [CodePointer, EnvStack, Memory][]];\n\nconst Interpreter3 = ({\n  source,\n  onClose,\n}: {\n  source: string;\n  onClose?: () => void;\n}) => {\n  const [steps, setSteps] = useState<Steps>(computeI3steps(source));\n  // We only compile the steps if the prop changes\n  useEffect(() => {\n    setSteps(computeI3steps(source));\n  }, [source]);\n\n  let [installedCode, stepList] = steps;\n\n  installedCode = clean(installedCode);\n\n  const [step, setStep] = useState(0);\n\n  const [currentInst, envStack, memory] = stepList[step];\n  const envStackS = envStack.join(\"\\n\");\n  const memoryS = memory.join(\"\\n\");\n  const showMem = stepList.some(([_, __, s]) => s.length > 0);\n\n  const decorationsHandler = (e: any, m: Monaco) => {\n    e.revealRange(new m.Range(currentInst, 1, currentInst, 1));\n    return [\n      {\n        range: new m.Range(currentInst + 1, 1, currentInst + 1, 1),\n        options: {\n          isWholeLine: true,\n          linesDecorationsClassName: \"currentLineDec\",\n        },\n      },\n    ];\n  };\n\n  const handler = keyHandler(step, setStep, stepList.length);\n\n  return (\n    <div className=\"interpreter\">\n      <div className=\"interpreterTitle\">\n        <h3>\n          Step {step} - {}\n        </h3>\n        {onClose ? <button onClick={onClose}>X</button> : null}\n      </div>\n      <div className=\"interpreterEditors\">\n        <Editor\n          value={installedCode}\n          language=\"javascript\"\n          onKeyDown={(e) => handler(e.key)}\n          decorations={decorationsHandler}\n          options={{\n            readOnly: true,\n            lineNumbers: (lineNumber: number) => (lineNumber - 1).toString(),\n            theme: \"vs-dark\",\n          }}\n        />\n        <Editor\n          value={envStackS}\n          language=\"javascript\"\n          onKeyDown={(e) => handler(e.key)}\n          options={{\n            readOnly: true,\n            lineNumbers: (lineNumber: number) =>\n              envStackS.split(\"\\n\").length - lineNumber + 1,\n            minimap: { enabled: false },\n          }}\n        />\n        {showMem ? (\n          <Editor\n            value={memoryS}\n            language=\"javascript\"\n            onKeyDown={(e) => handler(e.key)}\n            options={{\n              readOnly: true,\n              lineNumbers: (lineNumber: number) => (lineNumber - 1).toString(),\n              theme: \"vs-dark\",\n              minimap: { enabled: false },\n            }}\n          />\n        ) : null}\n      </div>\n      <Progress values={steps[1]} index={step} setIndex={setStep} />\n    </div>\n  );\n};\n\nfunction clean(code: string): string {\n  return code\n    .split(\"\\n\")\n    .map((i) => i.split(\" \").slice(1).join(\" \"))\n    .filter((i) => i.length > 0)\n    .join(\"\\n\");\n}\n\nexport default Interpreter3;\n","import { useEffect, useState } from \"react\";\nimport CytoscapeComponent from \"react-cytoscapejs\";\nimport Cytoscape from \"cytoscape\";\n//@ts-ignore\nimport klay from \"cytoscape-klay\";\nimport { useDebouncedCallback } from \"use-debounce\";\n\nimport Progress, { keyHandler } from \"./Progress\";\nimport Editor from \"./Editor\";\nimport \"./Stacks.css\";\nimport { computeJargonSteps } from \"./slangWrapper\";\n\nCytoscape.use(klay);\n\nexport type jargonStepsT = [\n  string[],\n  {\n    stack: string[];\n    heap: string[];\n    heap_graph: heap_graph;\n    cp: number;\n    fp: number;\n    sp: number;\n    status: string;\n  }[]\n];\n\ntype node_type = \"H_INT\" | \"H_BOOL\" | \"H_CI\" | \"H_HI\" | \"H_HEADER\";\ntype heap_node = {\n  id: string;\n  label: string;\n  tp: [node_type];\n  pointer: number;\n};\n\ntype edge_type = \"BLOCK\" | \"POINTER\";\ntype heap_edge = {\n  source: string;\n  target: string;\n  label: string;\n  tp: [edge_type];\n};\n\ntype heap_graph = [heap_node[], heap_edge[]];\n\ntype pointers = {\n  heap: {\n    show: boolean;\n    val: number;\n  };\n  code: {\n    showHeap: boolean;\n    heap: number;\n  };\n};\n\nconst InterpreterJargon = ({\n  source,\n  onClose,\n}: {\n  source: string;\n  onClose?: () => void;\n}) => {\n  const [steps, setSteps] = useState(computeJargonSteps(source));\n  // We only compile the steps if the prop changes\n  useEffect(() => {\n    setSteps(computeJargonSteps(source));\n  }, [source]);\n\n  const [installedCode, stepsList] = steps;\n\n  const installedCodeS = installedCode.join(\"\\n\");\n\n  const [step, setStep] = useState(0);\n\n  const { stack, cp, fp, heap, heap_graph } = stepsList[step];\n\n  const envStack = stack\n    .slice()\n    .reverse()\n    .map((s) => s.slice(6))\n    .join(\"\\n\");\n\n  const currentInst = cp + 1;\n  const currentFrame = stack.length - fp;\n\n  const memory = heap.join(\"\\n\");\n  const showMemory = stepsList.some(({ heap }) => heap.length > 0);\n\n  const [pointers, setPointers] = useState<pointers>({\n    heap: {\n      show: false,\n      val: 0,\n    },\n    code: {\n      showHeap: false,\n      heap: 0,\n    },\n  });\n\n  const handler = keyHandler(step, setStep, stepsList.length);\n\n  const codeDecorationsHandler = (e: any, m: any) => {\n    e.revealRange(new m.Range(currentInst, 1, currentInst, 1));\n    e.setPosition({\n      column: 0,\n      lineNumber: currentInst,\n    });\n    return [\n      {\n        range: new m.Range(currentInst, 1, currentInst, 1),\n        options: {\n          isWholeLine: true,\n          linesDecorationsClassName: \"currentLineDec\",\n        },\n      },\n      {\n        range: new m.Range(pointers.code.heap, 1, pointers.code.heap, 1),\n        options: {\n          isWholeLine: true,\n          linesDecorationsClassName: pointers.code.showHeap\n            ? \"heapPointerDec\"\n            : \"\",\n        },\n      },\n    ];\n  };\n\n  const envDecorationsHandler = (e: any, m: any) => {\n    return [\n      {\n        range: new m.Range(currentFrame, 1, currentFrame, 1),\n        options: {\n          isWholeLine: true,\n          linesDecorationsClassName: \"framePointerDec\",\n        },\n      },\n    ];\n  };\n\n  const heapDecorationsHandler = (e: any, m: any) => {\n    if (pointers.heap.show) {\n      e.revealRange(new m.Range(pointers.heap.val, 1, pointers.heap.val, 1));\n    }\n    return [\n      {\n        range: new m.Range(pointers.heap.val, 1, pointers.heap.val, 1),\n        options: {\n          isWholeLine: true,\n          linesDecorationsClassName: pointers.heap.show ? \"heapPointerDec\" : \"\",\n        },\n      },\n    ];\n  };\n\n  const [nodes, edges] = heap_graph;\n\n  const elements = [\n    ...nodes.map((v) => ({\n      data: v,\n      style: nodeStyle(v.tp[0]),\n    })),\n    ...edges.map((v) => ({\n      data: v,\n    })),\n  ];\n\n  const onMouseNodeOver = useDebouncedCallback((e: any) => {\n    const data = e.target._private.data;\n    const isCI = data.tp[0] === \"H_CI\";\n    const pointer = {\n      heap: {\n        val: parseInt(data.id) + 1,\n        show: true,\n      },\n      code: {\n        showHeap: isCI,\n        heap: isCI ? data.pointer + 1 : pointers.code.heap,\n      },\n    };\n\n    setPointers(pointer);\n  }, 50);\n\n  const onMouseNodeOff = useDebouncedCallback((e: any) => {\n    setPointers({\n      heap: {\n        val: pointers.heap.val,\n        show: false,\n      },\n      code: {\n        showHeap: false,\n        heap: pointers.code.heap,\n      },\n    });\n  }, 50);\n\n  return (\n    <div className=\"interpreter\">\n      <div className=\"interpreterTitle\">\n        <h3>\n          Step {step} - {}\n        </h3>\n        {onClose ? <button onClick={onClose}>X</button> : null}\n      </div>\n      <div className=\"interpreterEditors\">\n        <Editor\n          value={installedCodeS}\n          width=\"33%\"\n          language=\"javascript\"\n          onKeyDown={(e) => handler(e.key)}\n          decorations={codeDecorationsHandler}\n          options={{\n            readOnly: true,\n            lineNumbers: (lineNumber: number) => (lineNumber - 1).toString(),\n            theme: \"vs-dark\",\n          }}\n        />\n        <Editor\n          value={envStack}\n          language=\"javascript\"\n          width=\"33%\"\n          onKeyDown={(e) => handler(e.key)}\n          decorations={envDecorationsHandler}\n          options={{\n            readOnly: true,\n            lineNumbers: (lineNumber: number) =>\n              (envStack.split(\"\\n\").length - lineNumber + 1).toString(),\n            minimap: { enabled: false },\n          }}\n        />\n        <div className=\"jargonMem\">\n          {showMemory ? (\n            <Editor\n              value={memory}\n              height=\"50%\"\n              decorations={heapDecorationsHandler}\n              language=\"javascript\"\n              onKeyDown={(e) => handler(e.key)}\n              options={{\n                readOnly: true,\n                lineNumbers: (lineNumber: number) =>\n                  (lineNumber - 1).toString(),\n                theme: \"vs-dark\",\n                minimap: { enabled: false },\n              }}\n            />\n          ) : null}\n\n          <CytoscapeComponent\n            id=\"heap\"\n            elements={elements}\n            style={{ height: \"50%\" }}\n            cy={(cy) =>\n              cy.on(\"add\", \"node\", (_evt) => {\n                cy.layout({\n                  name: \"klay\",\n                  //@ts-ignore\n                  klay: {\n                    direction: \"DOWN\",\n                    borderSpacing: 80,\n                    spacing: 80,\n                  },\n                }).run();\n                cy.fit();\n                cy.on(\"mouseover\", \"node\", onMouseNodeOver);\n                cy.on(\"mouseout\", \"node\", onMouseNodeOff);\n              })\n            }\n          />\n        </div>\n      </div>\n      <Progress values={steps[1]} index={step} setIndex={setStep} />\n    </div>\n  );\n};\n\nfunction nodeStyle(nodeTp: node_type) {\n  let style;\n  switch (nodeTp) {\n    case \"H_INT\":\n      style = {\n        shape: \"square\",\n        \"background-color\": \"white\",\n      };\n      break;\n    case \"H_BOOL\":\n      style = {\n        shape: \"barrel\",\n        \"background-color\": \"purple\",\n      };\n      break;\n    case \"H_CI\":\n      style = {\n        shape: \"tag\",\n        \"background-color\": \"red\",\n      };\n      break;\n    case \"H_HI\":\n      style = {\n        shape: \"round-tag\",\n        \"background-color\": \"white\",\n      };\n      break;\n    case \"H_HEADER\":\n      style = {\n        \"background-color\": \"black\",\n      };\n  }\n\n  style = {\n    ...style,\n    \"text-margin-y\": \"-10\",\n    \"text-justification\": \"left\",\n    \"text-wrap\": \"wrap\",\n    color: \"green\",\n  };\n  return style;\n}\n\nexport default InterpreterJargon;\n","import { useState, useEffect } from \"react\";\nimport { useDebounce } from \"use-debounce\";\nimport { useMonaco } from \"@monaco-editor/react\";\n\nimport languageDef from \"./LanguageDef\";\nimport samplePrograms from \"./SamplePrograms\";\nimport { useKeypress } from \"./util\";\nimport Interpreter2 from \"./Interpreter2\";\nimport Interpreter3 from \"./Interpreter3\";\nimport InterpreterJargon from \"./InterpreterJargon\";\nimport \"./App.css\";\nimport {\n  code,\n  highlightRowsForLocation,\n  i2compile,\n  i3compile,\n  interp,\n  jargonCompile,\n  stringOfCode,\n} from \"./slangWrapper\";\nimport Editor from \"./Editor\";\n\nconst { fib } = samplePrograms;\n// TODO: fix slang crash bug\n// //@ts-ignore\n// for (const property in slang) {\n//   //@ts-ignore\n//   slang[property] = (...args: any[]) => {\n//     try {\n//       //@ts-ignore\n//       return slang[property](...args)\n//     } catch {\n//       return \"\\\"stack overflow\\\"\"\n//     }\n//   }\n// }\n\ntype sourceHighlight = {\n  highlight: boolean;\n  line: number;\n};\n\nfunction App() {\n  const [volatileSource, setSource] = useState(fib);\n  const [source] = useDebounce(volatileSource, 1000);\n\n  const [result, setResult] = useState(\"\");\n\n  const [i2code, setI2code] = useState(i2compile(source));\n  const i2codeString = stringOfCode(i2code).slice(1, -1);\n  const [i3code, setI3code] = useState(i3compile(source));\n  const i3codeString = stringOfCode(i3code);\n  const [jargonCode, setJargonCode] = useState(jargonCompile(source));\n  const jargonCodeString = stringOfCode(jargonCode);\n\n  const [showI2, setShowI2] = useState(false);\n  const [showI3, setShowI3] = useState(false);\n  const [showJargon, setShowJargon] = useState(false);\n\n  const [volatileSourceHighlight, setSourceHighlight] =\n    useState<sourceHighlight>({\n      highlight: false,\n      line: 0,\n    });\n  const [sourceHighlight] = useDebounce(volatileSourceHighlight, 50);\n\n  const decorationsTargetHandler = (code: code) => (e: any, m: any) => {\n    if (!sourceHighlight.highlight) return [];\n\n    const linesToHighlight = highlightRowsForLocation(\n      code,\n      sourceHighlight.line\n    );\n\n    return linesToHighlight.map((l) => ({\n      range: new m.Range(l + 1, 1, l + 1, 1),\n      options: {\n        isWholeLine: true,\n        linesDecorationsClassName: \"currentLineDec\",\n      },\n    }));\n  };\n\n  const decorationsSourceHandler = (e: any, m: any) => {\n    if (!sourceHighlight.highlight) return [];\n\n    return [\n      {\n        range: new m.Range(sourceHighlight.line, 1, sourceHighlight.line, 1),\n        options: {\n          isWholeLine: true,\n          linesDecorationsClassName: \"currentLineDec\",\n        },\n      },\n    ];\n  };\n\n  useKeypress([\"Escape\"], () => {\n    setShowI2(false);\n    setShowI3(false);\n    setShowJargon(false);\n  });\n\n  const monaco = useMonaco();\n\n  useEffect(() => {\n    monaco?.editor.setTheme(\"vs-dark\");\n    monaco?.languages.register({ id: \"Slang\" });\n    monaco?.languages.setMonarchTokensProvider(\"Slang\", languageDef);\n  }, [monaco]);\n\n  useEffect(() => {\n    setResult(\"\");\n    setI2code(i2compile(source));\n    setI3code(i3compile(source));\n    setJargonCode(jargonCompile(source));\n  }, [source]);\n\n  const onMouseMove = (code: code) => (event: any) => {\n    const lineNumber = event?.target?.position?.lineNumber;\n    if (lineNumber !== null && lineNumber !== undefined)\n      setSourceHighlight({ line: code[lineNumber - 1][0], highlight: true });\n  };\n  const onMouseMoveSource = (event: any) => {\n    const lineNumber = event?.target?.position?.lineNumber;\n    if (lineNumber !== null && lineNumber !== undefined)\n      setSourceHighlight({ line: lineNumber, highlight: true });\n  };\n  const onMouseLeave = () => setSourceHighlight({ highlight: false, line: 0 });\n\n  return (\n    <div className=\"App\">\n      <div className=\"editorWrapper\">\n        <h4>Slang</h4>\n        <Editor\n          height=\"86vh\"\n          defaultValue={source}\n          defaultLanguage=\"Slang\"\n          onMouseMove={onMouseMoveSource}\n          onMouseLeave={onMouseLeave}\n          decorations={decorationsSourceHandler}\n          onChange={(value, _) =>\n            value === undefined ? setSource(\"\") : setSource(value)\n          }\n          options={{\n            theme: \"vs-dark\",\n            minimap: { enabled: false },\n          }}\n        />\n        <div className=\"resultBox\">\n          <button disabled={!!result} onClick={() => setResult(interp(source))}>\n            {result === \"\" ? \"Compute Result\" : result}\n          </button>\n        </div>\n      </div>\n      <div className=\"editorWrapper\">\n        <h4>Interpreter 2</h4>\n        <Editor\n          defaultLanguage=\"javascript\"\n          height=\"86vh\"\n          value={i2codeString}\n          onMouseMove={onMouseMove(i2code)}\n          onMouseLeave={onMouseLeave}\n          decorations={decorationsTargetHandler(i2code)}\n          options={{\n            tabSize: 2,\n            readOnly: true,\n            theme: \"vs-dark\",\n            minimap: { enabled: false },\n          }}\n        />\n        <button onClick={() => setShowI2(!showI2)}>\n          Visualize Interpretation\n        </button>\n      </div>\n      <div className=\"editorWrapper\">\n        <h4>Interpreter 3</h4>\n        <Editor\n          defaultLanguage=\"javascript\"\n          value={i3codeString}\n          onMouseMove={onMouseMove(i3code)}\n          onMouseLeave={onMouseLeave}\n          decorations={decorationsTargetHandler(i3code)}\n          height=\"86vh\"\n          options={{\n            readOnly: true,\n            theme: \"vs-dark\",\n            minimap: { enabled: false },\n          }}\n        />\n        <button onClick={() => setShowI3(!showI3)}>\n          Visualize Interpretation\n        </button>\n      </div>\n      <div className=\"editorWrapper\">\n        <h4>Jargon</h4>\n        <Editor\n          defaultLanguage=\"javascript\"\n          value={jargonCodeString}\n          onMouseMove={onMouseMove(jargonCode)}\n          onMouseLeave={onMouseLeave}\n          decorations={decorationsTargetHandler(jargonCode)}\n          height=\"86vh\"\n          options={{\n            readOnly: true,\n            theme: \"vs-dark\",\n            minimap: { enabled: false },\n          }}\n        />\n        <button onClick={() => setShowJargon(!showJargon)}>\n          Visualize Interpretation\n        </button>\n      </div>\n      {showI2 ? (\n        <Interpreter2 source={source} onClose={() => setShowI2(false)} />\n      ) : null}\n      {showI3 ? (\n        <Interpreter3 source={source} onClose={() => setShowI3(false)} />\n      ) : null}\n      {showJargon ? (\n        <InterpreterJargon\n          source={source}\n          onClose={() => setShowJargon(false)}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}