{"version":3,"sources":["LanguageDef.ts","SamplePrograms.ts","Editor.tsx","Progress.tsx","util.ts","slangWrapper.ts","Interpreter2.tsx","Interpreter3.tsx","InterpreterJargon.tsx","App.tsx","IntermediateSteps.tsx","Landing.tsx","index.tsx"],"names":["languageDef","keywords","typeKeywords","operators","symbols","escapes","tokenizer","root","cases","include","token","bracket","next","comment","string","whitespace","samplePrograms","fib","fun","gcd","Editor","props","setDecorations","useState","decorations","editorRef","useRef","monacoRef","onMouseMoveRef","onMouseMove","current","onMouseLeaveRef","onMouseLeave","keyDownRef","onKeyDown","useEffect","old_dec","deltaDecorations","onMount","e","m","browserEvent","keyHandler","index","setIndex","size","key","Progress","values","n","length","handler","keys","eventListenerRef","event","includes","eventListener","window","addEventListener","removeEventListener","useKeypress","className","onClick","selectedIndex","appearance","onSelect","jsonParsedStream","s","steps","JSON","parse","reverse","i2Stream","slang","i3Stream","code","stepStream","jargonStream","stringOfCode","c","map","join","Interpreter2","ss","source","setStream","step","setStep","codeStack","envStack","memory","showNestedInstructions","setShowNestedInstructions","filteredCodeStack","filter","startsWith","codeStackS","slice","envStackS","_","split","memoryS","showMem","some","value","language","options","readOnly","theme","lineNumbers","lineNumber","toString","Interpreter3","currentInst","cleanCode","range","Range","isWholeLine","linesDecorationsClassName","minimap","enabled","Cytoscape","use","klay","nodeStyle","nodeTp","style","shape","color","InterpreterJargon","Paths","codeString","stack","cp","fp","heap","heap_graph","env","currentFrame","showMemory","trim","show","val","showHeap","pointers","setPointers","nodes","edges","elements","v","data","tp","onMouseNodeOver","useDebouncedCallback","target","_private","isCI","pointer","parseInt","id","onMouseNodeOff","width","scrollBeyondLastLine","height","revealRange","cy","on","_evt","layout","name","direction","borderSpacing","spacing","run","fit","IntermediateSteps","i2code","interp2Code","i2codeString","i3code","interp3Code","i3compile","i3codeString","jargonCode","jargonCompile","jargonCodeString","defaultLanguage","tabSize","LandingPage","subViews","routes","encode","interp2","interp3","jargon","encodeURIComponent","App","useRoutes","path","SubViewElement","encodedCode","decodeURIComponent","decode","volatileSource","setSource","useDebounce","navigate","highlight","line","volatileSourceHighlight","setSourceHighlight","sourceHighlight","monaco","useMonaco","editor","setTheme","languages","register","setMonarchTokensProvider","defaultValue","position","undefined","onChange","l","reduce","linesToHighlight","codeLine","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13f9c5a9.chunk.js","sourcesContent":["const languageDef = {\n  keywords: [\n    \"true\", \"false\", \"ref\", \"inl\", \"inr\",\n    \"fst\", \"snd\", \"case\", \"of\", \"if\", \"then\",\n    \"else\", \"let\", \"fun\", \"in\", \"begin\", \"end\",\n    \"while\", \"do\", \"()\"\n  ],\n\n  typeKeywords: [\n    'int', 'bool', 'unit', 'banter'\n  ],\n\n  operators: [\n    \",\", \":\", \";\", \"+\",\n    \"-\", \"*\", \"/\", \"~\",\n    \"=\", \":=\", \"<\", \"&&\",\n    \"||\", \"|\", \"->\", \"?\",\n    \"!\", \"()\"\n  ],\n\n  // we include these common regular expressions\n  symbols:  /[=><!~?:&|+\\-*/^%]+/,\n\n  // C# style strings\n  escapes: /\\\\/,\n\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n      // identifiers and keywords\n      [/[a-z_$][\\w$]*/, { cases: { '@typeKeywords': 'keyword',\n                                   '@keywords': 'keyword',\n                                   '@default': 'identifier' } }],\n      [/[A-Z][\\w$]*/, 'type.identifier' ],  // to show class names nicely\n\n      // whitespace\n      { include: '@whitespace' },\n\n      // delimiters and operators\n      [/[{}()[\\]]/, '@brackets'],\n      [/[<>](?!@symbols)/, '@brackets'],\n      [/@symbols/, { cases: { '@operators': 'operator',\n                              '@default'  : '' } } ],\n\n      // numbers\n      [/\\d*\\.\\d+([eE][-+]?\\d+)?/, 'number.float'],\n      [/0[xX][0-9a-fA-F]+/, 'number.hex'],\n      [/\\d+/, 'number'],\n\n      // strings\n      [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid' ],  // non-teminated string\n      [/\"/,  { token: 'string.quote', bracket: '@open', next: '@string' } ],\n\n      // characters\n      [/'[^\\\\']'/, 'string'],\n      [/(')(@escapes)(')/, ['string','string.escape','string']],\n      [/'/, 'string.invalid']\n    ],\n\n    comment: [\n      [/[^(*]+/, 'comment' ],\n      [/\\(\\*/,    'comment', '@push' ],    // nested comment\n      [\"\\\\*\\\\)\",    'comment', '@pop'  ],\n      [/[(*]/,   'comment' ]\n    ],\n\n    string: [\n      [/[^\\\\\"]+/,  'string'],\n      [/@escapes/, 'string.escape'],\n      [/\\\\./,      'string.escape.invalid'],\n      [/\"/,        { token: 'string.quote', bracket: '@close', next: '@pop' } ]\n    ],\n\n    whitespace: [\n      [/[ \\t\\r\\n]+/, 'white'],\n      [/\\(\\*/,       'comment', '@comment' ],\n    ],\n  },\n};\n\nexport default languageDef;\n","const samplePrograms = {\n  fib: `let fib( m : int) : int =\n    if m = 0\n    then 1\n    else if m = 1\n        then 1\n        else fib (m - 1) + fib (m -2)\n        end\n    end\nin\n    fib(1)\nend\n\n(* Edit me to get started *)`,\n\n  fun: `(* the reason we need closures on the heap ... *) \n\nlet f(y : int) : int -> int =\n  let g(x :int) : int = y + x in g end\nin\n  let add21 : int -> int  = f(21) in\n      let add17 : int -> int  = f(17) in\n         add17(3) + add21(60)\n       end\n  end\nend`,\n\n  gcd: `let gcd(p : int * int) : int =\n    let m : int = fst p in\n       let  n : int = snd p in\n          if m = n\n          then m\n          else if m < n\n               then gcd(m, n - m)\n               else gcd(m - n, n)\n               end\n           end\n       end\n     end\nin\n   let x : int = 10 in\n      let  y : int = 2 in gcd(x, y) end\n    end\nend`,\n};\n\nexport default samplePrograms;\n","import EditorInternal, { EditorProps, Monaco } from \"@monaco-editor/react\";\nimport { useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\n\ninterface IEditorProps extends EditorProps {\n  onKeyDown?: (e: KeyboardEvent) => void;\n  decorations?: (editor: any, monaco: Monaco) => any;\n  onMouseMove?: (e: any) => void;\n  onMouseLeave?: (e: any) => void;\n}\n\nconst Editor = (props: IEditorProps) => {\n  const setDecorations = useState({})[1];\n  const { decorations } = props;\n\n  const editorRef = useRef<any>();\n  const monacoRef = useRef<any>();\n\n  const onMount = (e: any, m: any) => {\n    editorRef.current = e;\n    monacoRef.current = m;\n    if (decorations) {\n      setDecorations((old_dec) =>\n        editorRef.current?.deltaDecorations(\n          old_dec,\n          decorations(editorRef.current, monacoRef.current)\n        )\n      );\n    }\n  };\n\n  const onMouseMoveRef = useRef(props.onMouseMove);\n  onMouseMoveRef.current = props.onMouseMove;\n\n  const onMouseLeaveRef = useRef(props.onMouseLeave);\n  onMouseLeaveRef.current = props.onMouseLeave;\n\n  const keyDownRef = useRef(props.onKeyDown);\n  useEffect(() => {\n    keyDownRef.current = props.onKeyDown;\n  }, [props.onKeyDown]);\n\n  useEffect(() => {\n    if (decorations && editorRef.current && monacoRef.current)\n      setDecorations((old_dec) =>\n        editorRef.current?.deltaDecorations(\n          old_dec,\n          decorations(editorRef.current, monacoRef.current)\n        )\n      );\n  }, [decorations, setDecorations]);\n\n  return (\n    <EditorInternal\n      {...props}\n      onMount={(e, m) => {\n        e.onMouseMove((e: any) => {\n          if (onMouseMoveRef.current) onMouseMoveRef.current(e);\n        });\n        e.onMouseLeave((e: any) => {\n          if (onMouseLeaveRef.current) onMouseLeaveRef.current(e);\n        });\n        if (props.onMount) props.onMount(e, m);\n        onMount(e, m);\n        e.onKeyDown(({ browserEvent }: { browserEvent: KeyboardEvent }) => {\n          if (keyDownRef.current) keyDownRef.current(browserEvent);\n        });\n      }}\n    />\n  );\n};\n\nexport default Editor;\n","import { ProgressIndicator } from \"@atlaskit/progress-indicator\";\nimport \"./Stacks.css\";\nimport { useKeypress } from \"./util\";\n\nexport function keyHandler(\n  index: number,\n  setIndex: (i: number) => void,\n  size: number\n) {\n  const inc = () => setIndex((((index + 1) % size) + size) % size);\n  const dec = () => setIndex((((index - 1) % size) + size) % size);\n\n  return (key: string) => {\n    switch (key) {\n      case \"ArrowRight\":\n        inc();\n        break;\n      case \"ArrowLeft\":\n        dec();\n        break;\n    }\n  };\n}\n\nconst Progress = ({\n  values,\n  index,\n  setIndex,\n}: {\n  values: any[];\n  index: number;\n  setIndex: (n: number) => void;\n}) => {\n  const n = values.length;\n\n  const inc = () => setIndex((((index + 1) % n) + n) % n);\n  const dec = () => setIndex((((index - 1) % n) + n) % n);\n\n  const handler = keyHandler(index, setIndex, n);\n  useKeypress([\"ArrowRight\", \"ArrowLeft\"], (e: KeyboardEvent) =>\n    handler(e.key)\n  );\n\n  return (\n    <div className=\"progress\">\n      <button onClick={dec}>{\"<\"}</button>\n      <ProgressIndicator\n        selectedIndex={index}\n        values={values}\n        appearance={\"inverted\"}\n        onSelect={({ index }) => (setIndex ? setIndex(index) : null)}\n      />\n      <button onClick={inc}>{\">\"}</button>\n    </div>\n  );\n};\n\nexport default Progress;\n","import { useEffect, useRef } from 'react';\n\ntype Handler = (event: KeyboardEvent) => void;\n\nexport const useKeypress = (keys: string[], handler: Handler) => {\n  const eventListenerRef = useRef<Handler>(() => {});\n\n  useEffect(() => {\n    eventListenerRef.current = (event: KeyboardEvent) => {\n      if (keys.includes(event.key)) {\n        handler?.(event);\n      }\n    };\n  }, [keys, handler]);\n\n  useEffect(() => {\n    const eventListener = (event: KeyboardEvent) => {\n      eventListenerRef.current(event);\n    };\n    window.addEventListener('keydown', eventListener);\n    return () => {\n      window.removeEventListener('keydown', eventListener);\n    };\n  }, []);\n};","import { Steps as i2Steps } from \"./Interpreter2\";\nimport { StreamWrapper as I3StreamWrapper } from \"./Interpreter3\";\nimport { StreamWrapper as JargonStreamWrapper } from \"./InterpreterJargon\";\n\nexport type code = [number, string][];\n\nexport type Stream<T> = {\n  steps: T;\n  next: () => Stream<T>;\n};\n\nfunction jsonParsedStream<T>(s: Stream<string>): Stream<T> {\n  return {\n    steps: JSON.parse(s.steps).reverse(),\n    next: () => jsonParsedStream(s.next()),\n  };\n}\n\n//@ts-ignore\nexport const interp = (s: string) => slang.interp0(s);\n\nexport const i2compile = (s: string): code =>\n  //@ts-ignore\n  JSON.parse(slang.interp2Code(s));\n\nexport const i3compile = (s: string): code =>\n  //@ts-ignore\n  JSON.parse(slang.interp3Code(s));\n\nexport const jargonCompile = (s: string): code =>\n  //@ts-ignore\n  JSON.parse(slang.jargonCode(s));\n\nexport const i2Stream = (s: string): Stream<i2Steps> => {\n  //@ts-ignore\n  return jsonParsedStream(slang.i2Stream(s));\n};\n\nexport const i3Stream = (s: string): I3StreamWrapper => {\n  //@ts-ignore\n  const { code, stepStream } = slang.i3Stream(s);\n  return { code: JSON.parse(code), stepStream: jsonParsedStream(stepStream) };\n};\n\nexport const jargonStream = (s: string): JargonStreamWrapper => {\n  //@ts-ignore\n  const { code, stepStream } = slang.jargonStream(s);\n  return { code: JSON.parse(code), stepStream: jsonParsedStream(stepStream) };\n};\n\nexport function stringOfCode(c: code) {\n  return c.map(([_, s]) => s).join(\"\\n\");\n}\n\nexport function highlightRowsForLocation(c: code, l: number): number[] {\n  return c.reduce(\n    (linesToHighlight, codeLine, i) =>\n      codeLine[0] === l ? [i, ...linesToHighlight] : linesToHighlight,\n    [] as number[]\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nimport Editor from \"./Editor\";\nimport Progress, { keyHandler } from \"./Progress\";\nimport { i2Stream, Stream } from \"./slangWrapper\";\nimport { SubViewProps } from \"./App\";\n\nimport \"./Stacks.css\";\n\ntype CodeStack = [number, string][];\ntype EnvStack = string[];\ntype Memory = string[];\nexport type Steps = [CodeStack, EnvStack, Memory][];\n\nconst trimClosures = (ss: string[]) => {\n  return ss.map((s, _) =>\n    s.length > 40 ? s.split(\"\\n\").join(\" \").slice(0, 40) + \"...\" : s\n  );\n};\n\nconst Interpreter2 = ({\n  source,\n  onMouseMove,\n  onMouseLeave,\n  decorations,\n}: SubViewProps) => {\n  const [{ steps, next }, setStream] = useState<Stream<Steps>>(\n    i2Stream(source)\n  );\n  const [step, setStep] = useState(0);\n  const [codeStack, envStack, memory] = steps[step];\n  const [showNestedInstructions, setShowNestedInstructions] = useState(true);\n\n  const filteredCodeStack = showNestedInstructions\n    ? codeStack\n    : codeStack.filter(([i, s]) => !s.startsWith(\"\\t\"));\n\n  const codeStackS = filteredCodeStack\n    .map(([_, s]) => s)\n    .join(\"\\n\")\n    .slice(1, -1);\n\n  const envStackS = (\n    showNestedInstructions ? envStack : trimClosures(envStack)\n  ).join(\"\\n\");\n\n  const memoryS = memory.join(\"\\n\");\n\n  const showMem = steps.some(([_, __, s]) => s.length > 0);\n\n  const handler = keyHandler(step, setStep, steps.length);\n\n  useEffect(() => {\n    setStream(i2Stream(source));\n    setStep(0);\n  }, [source]);\n\n  useEffect(() => {\n    if (step >= steps.length - 3 && steps[steps.length - 1][0].length > 0) {\n      setStream(next());\n    }\n  }, [step, steps, next]);\n\n  return (\n    <div className=\"interpreter\">\n      <div className=\"interpreterTitle\">\n        <h3>\n          Step {step} - {step > 0 ? steps[step - 1][0][0] : \"Start\"}\n        </h3>\n        <button\n          onClick={() => setShowNestedInstructions(!showNestedInstructions)}\n        >\n          {showNestedInstructions ? \"Hide\" : \"Show\"} nested instructions\n        </button>\n      </div>\n      <div className=\"interpreterEditors\">\n        <Editor\n          value={codeStackS}\n          decorations={decorations(filteredCodeStack)}\n          onMouseMove={onMouseMove(filteredCodeStack)}\n          onMouseLeave={onMouseLeave}\n          language=\"javascript\"\n          onKeyDown={(e) => handler(e.key)}\n          options={{\n            readOnly: true,\n            theme: \"vs-dark\",\n            lineNumbers: (lineNumber: number) =>\n              codeStackS.split(\"\\n\").length - lineNumber + 1,\n          }}\n        />\n        <Editor\n          value={envStackS}\n          className=\"i2StackEditor\"\n          language=\"javascript\"\n          onKeyDown={(e) => handler(e.key)}\n          options={{\n            readOnly: true,\n            theme: \"vs-dark\",\n            lineNumbers: (lineNumber: number) =>\n              envStackS.split(\"\\n\").length - lineNumber + 1,\n          }}\n        />\n        {showMem ? (\n          <Editor\n            value={memoryS}\n            language=\"javascript\"\n            onKeyDown={(e) => handler(e.key)}\n            options={{\n              readOnly: true,\n              theme: \"vs-dark\",\n              lineNumbers: (lineNumber: number) => (lineNumber - 1).toString(),\n            }}\n          />\n        ) : null}\n      </div>\n      <Progress values={steps} index={step} setIndex={setStep} />\n    </div>\n  );\n};\n\nexport default Interpreter2;\n","import { useEffect, useState } from \"react\";\n\nimport { Monaco } from \"@monaco-editor/react\";\n\nimport Progress, { keyHandler } from \"./Progress\";\nimport Editor from \"./Editor\";\nimport { i3Stream, Stream } from \"./slangWrapper\";\n\nimport \"./Stacks.css\";\nimport { SubViewProps } from \"./App\";\n\ntype Code = [number, string][];\ntype CodePointer = number;\ntype EnvStack = string[];\ntype Memory = string[];\n\ntype Steps = [CodePointer, EnvStack, Memory][];\nexport type StreamWrapper = {\n  code: Code;\n  stepStream: Stream<Steps>;\n};\n\nconst Interpreter3 = ({\n  source,\n  onMouseMove,\n  onMouseLeave,\n  decorations,\n}: SubViewProps) => {\n  const [\n    {\n      code,\n      stepStream: { steps, next },\n    },\n    setStream,\n  ] = useState<StreamWrapper>(i3Stream(source));\n\n  const [step, setStep] = useState(0);\n  const [currentInst, envStack, memory] = steps[step];\n  const cleanCode = code.map(([_, s]) => s).join(\"\\n\");\n\n  const envStackS = envStack.join(\"\\n\");\n  const memoryS = memory.join(\"\\n\");\n\n  const showMem = steps.some(([_, __, s]) => s.length > 0);\n  const handler = keyHandler(step, setStep, steps.length);\n\n  useEffect(() => {\n    setStream(i3Stream(source));\n    setStep(0);\n  }, [source]);\n\n  useEffect(() => {\n    if (\n      step === steps.length - 1 &&\n      cleanCode.split(\"\\n\")[currentInst] !== \"HALT\"\n    )\n      setStream({\n        code: code,\n        stepStream: next(),\n      });\n  }, [step, code, next, currentInst, cleanCode, steps.length]);\n\n  const decorationsHandler = (e: any, m: Monaco) => {\n    return [\n      {\n        range: new m.Range(currentInst + 1, 1, currentInst + 1, 1),\n        options: {\n          isWholeLine: true,\n          linesDecorationsClassName: \"currentLineDec\",\n        },\n      },\n      ...decorations(code)(e, m),\n    ];\n  };\n\n  return (\n    <div className=\"interpreter\">\n      <div className=\"interpreterTitle\">\n        <h3>\n          Step {step} - {}\n        </h3>\n      </div>\n      <div className=\"interpreterEditors\">\n        <Editor\n          value={cleanCode}\n          language=\"javascript\"\n          onKeyDown={(e) => handler(e.key)}\n          decorations={decorationsHandler}\n          onMouseMove={onMouseMove(code)}\n          onMouseLeave={onMouseLeave}\n          options={{\n            readOnly: true,\n            lineNumbers: (lineNumber: number) => (lineNumber - 1).toString(),\n            theme: \"vs-dark\",\n          }}\n        />\n        <Editor\n          value={envStackS}\n          language=\"javascript\"\n          onKeyDown={(e) => handler(e.key)}\n          options={{\n            readOnly: true,\n            lineNumbers: (lineNumber: number) =>\n              envStackS.split(\"\\n\").length - lineNumber + 1,\n            minimap: { enabled: false },\n          }}\n        />\n        {showMem ? (\n          <Editor\n            value={memoryS}\n            language=\"javascript\"\n            onKeyDown={(e) => handler(e.key)}\n            options={{\n              readOnly: true,\n              lineNumbers: (lineNumber: number) => (lineNumber - 1).toString(),\n              theme: \"vs-dark\",\n              minimap: { enabled: false },\n            }}\n          />\n        ) : null}\n      </div>\n      <Progress values={steps} index={step} setIndex={setStep} />\n    </div>\n  );\n};\n\nexport default Interpreter3;\n","import { useEffect, useState } from \"react\";\nimport CytoscapeComponent from \"react-cytoscapejs\";\nimport Cytoscape from \"cytoscape\";\n//@ts-ignore\nimport klay from \"cytoscape-klay\";\nimport { useDebouncedCallback } from \"use-debounce\";\n\nimport Progress, { keyHandler } from \"./Progress\";\nimport Editor from \"./Editor\";\nimport { jargonStream, Stream } from \"./slangWrapper\";\nimport { SubViewProps } from \"./App\";\n\nimport \"./Stacks.css\";\n\nCytoscape.use(klay);\n\nexport type Step = {\n  stack: string[];\n  heap: string[];\n  heap_graph: heap_graph;\n  cp: number;\n  fp: number;\n  sp: number;\n  status: string;\n}[];\n\nexport type StreamWrapper = {\n  code: [number, string][];\n  stepStream: Stream<Step>;\n};\n\ntype node_type = \"H_INT\" | \"H_BOOL\" | \"H_CI\" | \"H_HI\" | \"H_HEADER\";\ntype heap_node = {\n  id: string;\n  label: string;\n  tp: [node_type];\n  pointer: number;\n};\n\ntype edge_type = \"BLOCK\" | \"POINTER\";\ntype heap_edge = {\n  source: string;\n  target: string;\n  label: string;\n  tp: [edge_type];\n};\n\ntype heap_graph = [heap_node[], heap_edge[]];\n\ntype pointers = {\n  heap: {\n    show: boolean;\n    val: number;\n  };\n  code: {\n    showHeap: boolean;\n    heap: number;\n  };\n};\n\nconst InterpreterJargon = ({\n  source,\n  onMouseMove,\n  onMouseLeave,\n  decorations,\n}: SubViewProps) => {\n  const [\n    {\n      code,\n      stepStream: { steps, next },\n    },\n    setStream,\n  ] = useState(jargonStream(source));\n\n  const codeString = code.map(([_, s]) => s).join(\"\\n\");\n  const [step, setStep] = useState(0);\n  const { stack, cp, fp, heap, heap_graph } = steps[step];\n\n  const env = stack\n    .slice()\n    .reverse()\n    .map((s) => s.slice(6))\n    .join(\"\\n\");\n\n  const currentInst = cp + 1;\n  const currentFrame = stack.length - fp;\n\n  const memory = heap.join(\"\\n\");\n  const showMemory = steps.some(({ heap }) => heap.length > 0);\n\n  const handler = keyHandler(step, setStep, steps.length);\n\n  useEffect(() => {\n    setStream(jargonStream(source));\n    setStep(0);\n  }, [source]);\n\n  useEffect(() => {\n    if (step === steps.length - 1 && code[cp][1].trim() !== \"HALT\") {\n      setStream({ code, stepStream: next() });\n    }\n  }, [code, cp, next, step, steps.length]);\n\n  const [pointers, setPointers] = useState<pointers>({\n    heap: {\n      show: false,\n      val: 0,\n    },\n    code: {\n      showHeap: false,\n      heap: 0,\n    },\n  });\n\n  const codeDecorationsHandler = (e: any, m: any) => {\n    return [\n      {\n        range: new m.Range(currentInst, 1, currentInst, 1),\n        options: {\n          isWholeLine: true,\n          linesDecorationsClassName: \"currentLineDec\",\n        },\n      },\n      {\n        range: new m.Range(pointers.code.heap, 1, pointers.code.heap, 1),\n        options: {\n          isWholeLine: true,\n          linesDecorationsClassName: pointers.code.showHeap\n            ? \"heapPointerDec\"\n            : \"\",\n        },\n      },\n      ...decorations(code)(e, m),\n    ];\n  };\n\n  const envDecorationsHandler = (_: any, m: any) => {\n    return [\n      {\n        range: new m.Range(currentFrame, 1, currentFrame, 1),\n        options: {\n          isWholeLine: true,\n          linesDecorationsClassName: \"framePointerDec\",\n        },\n      },\n    ];\n  };\n\n  const heapDecorationsHandler = (e: any, m: any) => {\n    if (pointers.heap.show) {\n      e.revealRange(new m.Range(pointers.heap.val, 1, pointers.heap.val, 1));\n    }\n    return [\n      {\n        range: new m.Range(pointers.heap.val, 1, pointers.heap.val, 1),\n        options: {\n          isWholeLine: true,\n          linesDecorationsClassName: pointers.heap.show ? \"heapPointerDec\" : \"\",\n        },\n      },\n    ];\n  };\n\n  const [nodes, edges] = heap_graph;\n\n  const elements = [\n    ...nodes.map((v) => ({\n      data: v,\n      style: nodeStyle(v.tp[0]),\n    })),\n    ...edges.map((v) => ({\n      data: v,\n    })),\n  ];\n\n  const onMouseNodeOver = useDebouncedCallback((e: any) => {\n    const data = e.target._private.data;\n    const isCI = data.tp[0] === \"H_CI\";\n    const pointer = {\n      heap: {\n        val: parseInt(data.id) + 1,\n        show: true,\n      },\n      code: {\n        showHeap: isCI,\n        heap: isCI ? data.pointer + 1 : pointers.code.heap,\n      },\n    };\n\n    setPointers(pointer);\n  }, 50);\n\n  const onMouseNodeOff = useDebouncedCallback((e: any) => {\n    setPointers({\n      heap: {\n        val: pointers.heap.val,\n        show: false,\n      },\n      code: {\n        showHeap: false,\n        heap: pointers.code.heap,\n      },\n    });\n  }, 50);\n\n  return (\n    <div className=\"interpreter\">\n      <div className=\"interpreterTitle\">\n        <h3>\n          Step {step} - {}\n        </h3>\n      </div>\n      <div className=\"interpreterEditors\">\n        <Editor\n          value={codeString}\n          width=\"36%\"\n          language=\"javascript\"\n          onKeyDown={(e) => handler(e.key)}\n          decorations={codeDecorationsHandler}\n          onMouseMove={onMouseMove(code)}\n          onMouseLeave={onMouseLeave}\n          options={{\n            readOnly: true,\n            lineNumbers: (lineNumber: number) => (lineNumber - 1).toString(),\n            theme: \"vs-dark\",\n            minimap: { enabled: false },\n            scrollBeyondLastLine: false,\n          }}\n        />\n        <Editor\n          value={env}\n          width=\"20%\"\n          language=\"javascript\"\n          onKeyDown={(e) => handler(e.key)}\n          decorations={envDecorationsHandler}\n          options={{\n            readOnly: true,\n            lineNumbers: (lineNumber: number) =>\n              (env.split(\"\\n\").length - lineNumber + 1).toString(),\n            minimap: { enabled: false },\n            scrollBeyondLastLine: false,\n          }}\n        />\n        <div className=\"jargonMem\">\n          {showMemory ? (\n            <Editor\n              value={memory}\n              height=\"50%\"\n              decorations={heapDecorationsHandler}\n              language=\"javascript\"\n              onKeyDown={(e) => handler(e.key)}\n              options={{\n                readOnly: true,\n                lineNumbers: (lineNumber: number) =>\n                  (lineNumber - 1).toString(),\n                theme: \"vs-dark\",\n                minimap: { enabled: false },\n                scrollBeyondLastLine: false,\n              }}\n            />\n          ) : null}\n\n          <CytoscapeComponent\n            id=\"heap\"\n            elements={elements}\n            style={{ height: \"50%\" }}\n            cy={(cy) =>\n              cy.on(\"add\", \"node\", (_evt) => {\n                cy.layout({\n                  name: \"klay\",\n                  //@ts-ignore\n                  klay: {\n                    direction: \"DOWN\",\n                    borderSpacing: 80,\n                    spacing: 80,\n                  },\n                }).run();\n                cy.fit();\n                cy.on(\"mouseover\", \"node\", onMouseNodeOver);\n                cy.on(\"mouseout\", \"node\", onMouseNodeOff);\n              })\n            }\n          />\n        </div>\n      </div>\n      <Progress values={steps} index={step} setIndex={setStep} />\n    </div>\n  );\n};\n\nfunction nodeStyle(nodeTp: node_type) {\n  let style;\n  switch (nodeTp) {\n    case \"H_INT\":\n      style = {\n        shape: \"square\",\n        \"background-color\": \"white\",\n      };\n      break;\n    case \"H_BOOL\":\n      style = {\n        shape: \"barrel\",\n        \"background-color\": \"purple\",\n      };\n      break;\n    case \"H_CI\":\n      style = {\n        shape: \"tag\",\n        \"background-color\": \"red\",\n      };\n      break;\n    case \"H_HI\":\n      style = {\n        shape: \"round-tag\",\n        \"background-color\": \"white\",\n      };\n      break;\n    case \"H_HEADER\":\n      style = {\n        \"background-color\": \"black\",\n      };\n  }\n\n  style = {\n    ...style,\n    \"text-margin-y\": \"-10\",\n    \"text-justification\": \"left\",\n    \"text-wrap\": \"wrap\",\n    color: \"green\",\n  };\n  return style;\n}\n\nexport default InterpreterJargon;\n","import { useState, useEffect } from \"react\";\nimport { useDebounce } from \"use-debounce\";\nimport { useMonaco } from \"@monaco-editor/react\";\n//@ts-ignore\nimport { navigate, useRoutes } from \"@patched/hookrouter\";\n\nimport languageDef from \"./LanguageDef\";\nimport samplePrograms from \"./SamplePrograms\";\nimport Interpreter2 from \"./Interpreter2\";\nimport Interpreter3 from \"./Interpreter3\";\nimport InterpreterJargon from \"./InterpreterJargon\";\nimport { code, highlightRowsForLocation } from \"./slangWrapper\";\nimport Editor from \"./Editor\";\nimport IntermediateSteps from \"./IntermediateSteps\";\nimport LandingPage from \"./Landing\";\n\nimport \"./App.css\";\n\nconst { fib } = samplePrograms;\n\ntype sourceHighlight = {\n  highlight: boolean;\n  line: number;\n};\n\nexport interface SubViewProps {\n  source: string;\n  onMouseMove: (code: code) => (event: any) => void;\n  onMouseLeave: () => void;\n  decorations: (code: code) => (\n    e: any,\n    m: any\n  ) => {\n    range: any;\n    options: {\n      isWholeLine: boolean;\n      linesDecorationsClassName: string;\n    };\n  }[];\n}\n\nconst subViews: {\n  [key: string]: [string, (s: SubViewProps) => JSX.Element];\n} = {\n  allViews: [\"All\", IntermediateSteps],\n  interp2: [\"Interpreter 2\", Interpreter2],\n  interp3: [\"Interpreter 3\", Interpreter3],\n  jargon: [\"Jargon\", InterpreterJargon],\n};\n\nenum Paths {\n  root = \"/\",\n  interp2 = \"/interp2/\",\n  interp3 = \"/interp3/\",\n  jargon = \"/jargon/\",\n}\ntype routerParams = { code: string; step: number };\nconst routes = {\n  \"/\": () => [Paths.root, LandingPage, encode(fib)],\n  \"/:code\": ({ code }: routerParams) => [Paths.root, IntermediateSteps, code],\n  \"/interp2\": () => [Paths.interp2, Interpreter2, encode(fib)],\n  \"/interp2/:code\": ({ code }: routerParams) => [\n    Paths.interp2,\n    Interpreter2,\n    code,\n  ],\n  \"/interp3\": () => [Paths.interp3, Interpreter3, encode(fib)],\n  \"/interp3/:code\": ({ code }: routerParams) => [\n    Paths.interp3,\n    Interpreter3,\n    code,\n  ],\n  \"/jargon\": () => [Paths.jargon, InterpreterJargon, encode(fib)],\n  \"/jargon/:code\": ({ code }: routerParams) => [\n    Paths.jargon,\n    InterpreterJargon,\n    code,\n  ],\n};\n\nfunction encode(code: string) {\n  return encodeURIComponent(code);\n}\n\nfunction decode(code: string) {\n  return decodeURIComponent(code);\n}\n\nfunction App() {\n  const [path, SubViewElement, encodedCode] = useRoutes(routes);\n  const code = decode(encodedCode);\n\n  const [volatileSource, setSource] = useState(code);\n  const [source] = useDebounce(volatileSource, 1000);\n\n  useEffect(() => {\n    if (source !== code) navigate(path + encode(source));\n  }, [source, path, code]);\n\n  const [volatileSourceHighlight, setSourceHighlight] =\n    useState<sourceHighlight>({\n      highlight: false,\n      line: 0,\n    });\n  const [sourceHighlight] = useDebounce(volatileSourceHighlight, 50);\n\n  const decorationsTargetHandler = (code: code) => (e: any, m: any) => {\n    if (!sourceHighlight.highlight) return [];\n\n    const linesToHighlight = highlightRowsForLocation(\n      code,\n      sourceHighlight.line\n    );\n\n    return linesToHighlight.map((l) => ({\n      range: new m.Range(l + 1, 1, l + 1, 1),\n      options: {\n        isWholeLine: true,\n        linesDecorationsClassName: \"sourceLineDec\",\n      },\n    }));\n  };\n\n  const decorationsSourceHandler = (e: any, m: any) => {\n    if (!sourceHighlight.highlight) return [];\n\n    return [\n      {\n        range: new m.Range(sourceHighlight.line, 1, sourceHighlight.line, 1),\n        options: {\n          isWholeLine: true,\n          linesDecorationsClassName: \"sourceLineDec\",\n        },\n      },\n    ];\n  };\n\n  const monaco = useMonaco();\n\n  useEffect(() => {\n    monaco?.editor.setTheme(\"vs-dark\");\n    monaco?.languages.register({ id: \"Slang\" });\n    monaco?.languages.setMonarchTokensProvider(\"Slang\", languageDef);\n  }, [monaco]);\n\n  const onMouseMove = (code: code) => (event: any) => {\n    const lineNumber = event?.target?.position?.lineNumber;\n    if (lineNumber !== null && lineNumber !== undefined)\n      setSourceHighlight({ line: code[lineNumber - 1][0], highlight: true });\n  };\n  const onMouseMoveSource = (event: any) => {\n    const lineNumber = event?.target?.position?.lineNumber;\n    if (lineNumber !== null && lineNumber !== undefined)\n      setSourceHighlight({ line: lineNumber, highlight: true });\n  };\n  const onMouseLeave = () => setSourceHighlight({ highlight: false, line: 0 });\n\n  return (\n    <div className=\"App\">\n      <div className=\"editorWrapper\">\n        <h4>Source</h4>\n        <Editor\n          height=\"86vh\"\n          defaultValue={source}\n          defaultLanguage=\"Slang\"\n          onMouseMove={onMouseMoveSource}\n          onMouseLeave={onMouseLeave}\n          decorations={decorationsSourceHandler}\n          onChange={(value, _) =>\n            value === undefined ? setSource(\"\") : setSource(value)\n          }\n          options={{\n            theme: \"vs-dark\",\n            minimap: { enabled: false },\n            scrollBeyondLastLine: false,\n          }}\n        />\n        <div className=\"selectBox\">\n          <select\n            value={path}\n            onChange={(e) => navigate(e.target.value + encodedCode)}\n          >\n            <option value={Paths.root}>{subViews[\"allViews\"][0]}</option>\n            <option value={Paths.interp2}>{subViews[\"interp2\"][0]}</option>\n            <option value={Paths.interp3}>{subViews[\"interp3\"][0]}</option>\n            <option value={Paths.jargon}>{subViews[\"jargon\"][0]}</option>\n          </select>\n        </div>\n      </div>\n      <SubViewElement\n        source={source}\n        onMouseMove={onMouseMove}\n        onMouseLeave={onMouseLeave}\n        decorations={decorationsTargetHandler}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { SubViewProps } from \"./App\";\nimport Editor from \"./Editor\";\nimport {\n  i2compile,\n  i3compile,\n  jargonCompile,\n  stringOfCode,\n} from \"./slangWrapper\";\n\nconst IntermediateSteps = ({\n  source,\n  decorations,\n  onMouseMove,\n  onMouseLeave,\n}: SubViewProps) => {\n  const i2code = i2compile(source);\n  const i2codeString = stringOfCode(i2code).slice(1, -1);\n  const i3code = i3compile(source);\n  const i3codeString = stringOfCode(i3code);\n  const jargonCode = jargonCompile(source);\n  const jargonCodeString = stringOfCode(jargonCode);\n\n  return (\n    <>\n      <div className=\"editorWrapper\">\n        <h4>Interpreter 2</h4>\n        <Editor\n          defaultLanguage=\"javascript\"\n          height=\"86vh\"\n          value={i2codeString}\n          onMouseMove={onMouseMove(i2code)}\n          onMouseLeave={onMouseLeave}\n          decorations={decorations(i2code)}\n          options={{\n            tabSize: 2,\n            readOnly: true,\n            theme: \"vs-dark\",\n            minimap: { enabled: false },\n          }}\n        />\n      </div>\n      <div className=\"editorWrapper\">\n        <h4>Interpreter 3</h4>\n        <Editor\n          defaultLanguage=\"javascript\"\n          value={i3codeString}\n          onMouseMove={onMouseMove(i3code)}\n          onMouseLeave={onMouseLeave}\n          decorations={decorations(i3code)}\n          height=\"86vh\"\n          options={{\n            readOnly: true,\n            theme: \"vs-dark\",\n            minimap: { enabled: false },\n          }}\n        />\n      </div>\n      <div className=\"editorWrapper\">\n        <h4>Jargon</h4>\n        <Editor\n          defaultLanguage=\"javascript\"\n          value={jargonCodeString}\n          onMouseMove={onMouseMove(jargonCode)}\n          onMouseLeave={onMouseLeave}\n          decorations={decorations(jargonCode)}\n          height=\"86vh\"\n          options={{\n            readOnly: true,\n            theme: \"vs-dark\",\n            minimap: { enabled: false },\n          }}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default IntermediateSteps;\n","const LandingPage = () => (\n  <div className=\"landing\">\n    <h1>Slang Compiler Explorer</h1>\n    <p>\n      This online tool demonstrates the compilation stages taught in the Part II\n      compilers course. It also demonstrates how the virtual machines for each\n      of the stages execute their representations.\n    </p>\n    <p>\n      Edit the source on the left to get started or choose an interpreter to\n      visualize its execution execution. Choose the interpreter using the select\n      on the bottom left.\n    </p>\n    <p>\n      Use the arrow keys to navigate evaluation steps (as long as the editor on\n      the left is not in focus).\n    </p>\n    <p>Programs are encoded in the url so they can easily be shared.</p>\n  </div>\n);\n\nexport default LandingPage;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}